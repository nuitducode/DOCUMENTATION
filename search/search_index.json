{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\uddc3\ufe0f SOMMAIRE","text":"<ul> <li> <p>\ud83d\udcd1 PR\u00c9SENTATION</p> </li> <li> <p>\ud83e\udde9 ORGANISATION</p> </li> <li> <p>\ud83c\udf81 COMMUNICATION &amp; \"GOODIES\"</p> </li> <li> <p>\ud83d\udca1 R\u00c8GLES ET CONSEILS</p> </li> <li> <p>\ud83d\udc0d TUTORIELS PYTHON / PYXEL</p> </li> <li> <p>\ud83d\udc31 TUTORIELS SCRATCH</p> </li> </ul> <p></p> <p> retour sur le site de la Nuit du c0de.</p> <p></p>"},{"location":"01-presentation/","title":"PR\u00c9SENTATION","text":"<p> La Nuit du Code : cr\u00e9ez un jeu avecScratch ou Python en 6h! </p>"},{"location":"01-presentation/#presentation-generale","title":"PR\u00c9SENTATION G\u00c9N\u00c9RALE","text":"<p>La NDC est un marathon de programmation Scratch et Python (avec le moteur de jeu Pyxel) organis\u00e9 par le Lyc\u00e9e Fran\u00e7ais International de Tokyo. Il s'adresse \u00e0 tous les \u00e9tablissements scolaires fran\u00e7ais (cours moyen / coll\u00e8ge / lyc\u00e9e / post-bac) de l'\u00e9tranger et de France.</p> <p>Par \u00e9quipes de deux ou trois r\u00e9parties en six cat\u00e9gories, les \u00e9l\u00e8ves ont six heures (ou moins pour les \u00e9l\u00e8ves de cycle 3) pour programmer enti\u00e8rement un jeu avec Scratch ou Python \u00e0 partir d'un univers de jeu fourni.</p> <p>Les six cat\u00e9gories :</p> <ul> <li>Scratch: CM1-6e, 5e-3e et Lyc\u00e9e</li> <li>Python: NSI Premi\u00e8re, NSI Terminale et post-bac</li> </ul> <p>\u00c9dition 2022 : 159 \u00e9tablissements inscrits, 4556 \u00e9l\u00e8ves, 141 villes, 38 pays.</p> <p>\u00c9dition 2023 : 371 \u00e9tablissements inscrits, 8648 \u00e9l\u00e8ves, 307 villes, 49 pays.</p> <p>Chaque ann\u00e9e, plusieurs univers de jeu sont propos\u00e9s. Ces univers de jeux sont mis \u00e0 dispositions des organisateurs 48h avant la date choisie par l'\u00e9tablissement pour organiser la NDC. Les \u00e9l\u00e8ves d\u00e9couvrent ces univers de jeu au d\u00e9but de la NDC et les \u00e9quipes doivent en choisir un. Un univers de jeu contient tous les \u00e9l\u00e9ments, sons et arri\u00e8re-plans n\u00e9cessaires pour cr\u00e9er le jeu.</p> <p>Pour pr\u00e9parer les \u00e9l\u00e8ves durant l'ann\u00e9e, des fiches, des tutoriels, des vid\u00e9os et des sujets d'entra\u00eenement sont fournis. La pr\u00e9paration peut se faire en pr\u00e9sence d'enseignants mais elle peut aussi se faire de fa\u00e7on autonome. Les \u00e9l\u00e8ves n'ont pas besoin d'avoir des connaissances particuli\u00e8res en Scratch et Python en d\u00e9but d'ann\u00e9e pour participer \u00e0 la NDC. Quelques s\u00e9ances de pr\u00e9paration et un peu de travail en autonomie suffisent.  </p> <p>Durant l'\u00e9v\u00e9nement, les \u00e9l\u00e8ves mettront \u00e0 l'\u00e9preuve leur capacit\u00e9 \u00e0 travailler en groupe, leurs comp\u00e9tences en algorithmique et en math\u00e9matiques ainsi que leur cr\u00e9ativit\u00e9 (les univers de jeu sont tr\u00e8s vari\u00e9s et laissent une grande place \u00e0 l'imagination et \u00e0 la construction de sc\u00e9narios). Pendant la NDC, les \u00e9l\u00e8ves peuvent demander de l'aide aux professeurs qui les encadrent, \u00e9changer entre \u00e9quipes, partager leurs connaissances... Les principaux crit\u00e8res d'\u00e9valuation sont la jouabilit\u00e9, la cr\u00e9ativit\u00e9 et l'originalit\u00e9. </p> <p>Le budget n\u00e9cessaire pour organiser la NDC au sein d'un \u00e9tablissement peut \u00eatre quasi nul. Il suffit de quelques ordinateurs connect\u00e9s \u00e0 internet (un ou plus par \u00e9quipe), une ou plusieurs salles et des encadrants. La nourriture et les boissons peuvent \u00eatre pris en charge par les familles. Mais il est aussi possible, si le budget le permet, de pr\u00e9voir des pizzas, des g\u00e2teaux, des \"goodies\" (autocollants et badges par exemple), des r\u00e9compenses...</p> <p>La NDC est avant tout un \u00e9v\u00e9nement festif et convivial. Chaque \u00e9tablissement peut inscrire autant d'\u00e9l\u00e8ves qu'il le souhaite, il n'y a pas de limite sur le nombre de participants. Les inscriptions sont gratuites.</p> <p>Pour se faire une id\u00e9e :</p> <ul> <li>Vid\u00e9os des \u00e9ditions pr\u00e9c\u00e9dentes</li> <li>Univers de jeu des \u00e9ditions pr\u00e9c\u00e9dentes</li> <li>Compte Twitter de la NDC (informations, images ,vid\u00e9os...)</li> </ul> <p>La participation d'un \u00e9tablissement peut \u00eatre l'occasion de la cr\u00e9ation d'un atelier de programmation pour les \u00e9l\u00e8ves. Les activit\u00e9s de programmation au coll\u00e8ge, en math\u00e9matiques ou en technologie, peuvent aussi \u00eatre orient\u00e9es \u00ab jeu \u00bb (gestion des d\u00e9placements, utilisation de variables pour compter les points...). De m\u00eame, pour Python, la pr\u00e9paration \u00e0 la NDC peut \u00eatre int\u00e9gr\u00e9e aux cours de NSI (boucles, listes, variables, fonctions, programmation orient\u00e9e objet... ). Les tutoriels propos\u00e9s pour pr\u00e9parer la NDC peuvent \u00eatre modifi\u00e9s et servir de supports de cours.</p> <p> </p> <p></p>"},{"location":"01-presentation/#les-grandes-lignes","title":"LES GRANDES LIGNES","text":"<ul> <li>Chaque \u00e9tablissement inscrit autant d'\u00e9l\u00e8ves qu'il le souhaite. Il n'y a pas de frais d'inscription.</li> <li>Le budget n\u00e9cessaire peut aller de z\u00e9ro \u00e0 quelques centaines d'euros.</li> <li>Des ressources, tutoriels et supports, ainsi que des  sujets d'entra\u00eenements seront fournis \u00e0 chaque \u00e9tablissement participant.</li> <li>Chaque \u00e9tablissement organise sa NDC avec ses \u00e9l\u00e8ves.</li> <li>Au terme de l'\u00e9v\u00e9nement, chaque \u00e9tablissement \u00e9lit ses \u00e9quipes championnes qui le repr\u00e9senteront dans chaque cat\u00e9gorie.</li> <li>Une s\u00e9lection mondiale est ensuite \u00e9tablie.</li> </ul>"},{"location":"01-presentation/#calendrier","title":"CALENDRIER","text":"<ul> <li> <p>Septembre 2023 - Avril 2024 : Inscriptions Si le projet vous int\u00e9resse, vous pouvez vous inscrire sur le site nuitducode.net. Vous aurez alors acc\u00e8s \u00e0 tous les documents, ressources, tutoriels, supports...  qui vous permettront de pr\u00e9parer et mettre en place la NDC. Tout est fait pour que la charge de travail des personnes qui organiseront la NDC dans un \u00e9tablissement soit la plus l\u00e9g\u00e8re possible.</p> </li> <li> <p>Janvier \u2013 Mai 2024 : Entra\u00eenements / Formation / S\u00e9lections Les \u00e9tablissements inscrits auront acc\u00e8s \u00e0 de nombreuses ressources : tutoriels, vid\u00e9os, guides, espace de discussions... Des univers de jeu avec grilles d'\u00e9valuation seront aussi disponibles. Ils pourront \u00eatre utilis\u00e9s soit pour organiser des s\u00e9ances d'entra\u00eenement avec les \u00e9l\u00e8ves, soit comme sujets de s\u00e9lection (si le nombre d'\u00e9l\u00e8ves souhaitant participer est sup\u00e9rieur \u00e0 la capacit\u00e9 d'accueil de l'\u00e9tablissement). Soit les deux.</p> </li> <li> <p>29 avril \u2013 1er juin 2024 : Nuit du c0de Les \u00e9tablissements inscrits recevront 48h avant la date qu'ils auront fix\u00e9e pour la NDC, les univers de jeu qui seront propos\u00e9s aux \u00e9l\u00e8ves. Ces sujets sont confidentiels !. Les \u00e9tablissements qui ne pr\u00e9voient pas de proposer des jeux pour la s\u00e9lection internationale peuvent organiser la NDC jusqu'au 29 juin. La NDC demande un minimum de logistique : ordinateurs en nombre suffisant (d'o\u00f9 la possible n\u00e9cessit\u00e9 d'organiser des s\u00e9lections), des encadrants, nourriture et boissons pour les personnes pr\u00e9sentes. Si des regroupements d'\u00e9tablissements proches sont possibles, ils sont encourag\u00e9s.</p> </li> <li> <p>Mi-juin 2024 : annonce de la s\u00e9lection \"Nuit du Code 2024\" Huit jeux par cat\u00e9gories seront s\u00e9lectionn\u00e9s par un jury d'enseignants. </p> </li> </ul> <p></p> <p>Pour toute question et demande de pr\u00e9cisions, vous pouvez utiliser l'espace de discussions ou prendre contact avec l'\u00e9quipe organisatrice en \u00e9crivant \u00e0 contact@nuitducode.net.</p> <p></p>"},{"location":"01-presentation/#la-nuit-du-c0de-en-images-edition-2022","title":"LA NUIT DU C0DE EN IMAGES - \u00c9DITION 2022","text":"<p>Vid\u00e9os, images, t\u00e9moignages et informations sur le  compte Twitter de la NDC.</p> <p></p> <p> </p>"},{"location":"02-organisation/","title":"ORGANISATION","text":"<p>Ce document s'adresse aux \u00e9quipes enseignantes et de direction dont les \u00e9tablissements participeront \u00e0 la NDC. Le Lyc\u00e9e Fran\u00e7ais International de Tokyo, organisateur de l'\u00e9v\u00e9nement, se charge de l'\u00e9laboration et de la diffusion de tous les documents n\u00e9cessaires \u00e0 la mise en place de ce marathon de programmation Scratch et Python. L'\u00e9v\u00e9nement dure 6 heures (ou moins pour \u00e9l\u00e8ves de cycle 3). Pour pouvoir l'organiser dans de bonnes conditions, plusieurs \u00e9l\u00e9ments sont \u00e0 prendre en compte.</p>"},{"location":"02-organisation/#a-taches-prioritaires","title":"A. T\u00c2CHES PRIORITAIRES","text":"<p>Rappel Tout est fait pour que la charge de travail du ou des organisateurs soit la plus l\u00e9g\u00e8re possible. Documents, guides, supports, mod\u00e8les..., tout est fourni (voir \"Ressources\" et la suite de ce document).</p> <ul> <li> <p>D\u00e9signer un ou plusieurs organisateursLa NDC peut \u00eatre organis\u00e9e au sein d'un \u00e9tablissement par une seule personne ou par plusieurs. Diff\u00e9rentes \u00e9quipes p\u00e9dagogiques peuvent s'impliquer. Scientifiques ou non. Par exemple, les enseignants d'Arts Plastiques peuvent contribuer \u00e0 la mise en place l'\u00e9v\u00e9nement (cr\u00e9ation de supports visuels, d\u00e9coration de l'\u00e9tablissement et/ou des salles, dessins vectoriels...). Si plusieurs personnes participent \u00e0 l'organisation de l'\u00e9v\u00e9nement, il est conseill\u00e9 de d\u00e9finir un coordinateur qui se chargera d'inscrire l'\u00e9tablissement, de faire le lien avec la direction et de faire le suivi gr\u00e2ce au site.</p> </li> <li> <p>Inscrire l'\u00e9tablissementL'inscription se fait sur le site de la NDC. Les param\u00e8tres de connexion alors cr\u00e9\u00e9s permettent d'acc\u00e9der \u00e0 un espace de gestion de l'\u00e9v\u00e9nement (suivi de l'organisation, ressources, interface pour enregistrer et \u00e9valuer les jeux...).</p> </li> <li> <p>Choisir la date de la NDCCe choix de la date n'est pas urgent. Il peut se faire en d\u00e9but ou milieu de deuxi\u00e8me trimestre en concertation direction. Cette date doit cependant \u00eatre communiqu\u00e9e suffisamment t\u00f4t afin de laisser du temps aux organisateurs et de permettre aux familles de s'organiser (surtout si elle tombe un samedi).</p> </li> <li> <p>D\u00e9finir un budgetLe budget n\u00e9cessaire pour organiser la NDC au sein d'un \u00e9tablissement peut \u00eatre quasi nul. La nourriture et les boissons peuvent \u00eatre pris en charge par les familles et il n'est pas obligatoire de pr\u00e9voir des prix. Un dipl\u00f4me imprim\u00e9 et une petite c\u00e9r\u00e9monie peuvent suffire. Mais il est aussi possible, si le budget le permet, de pr\u00e9voir des commandes de pizzas, des g\u00e2teaux, des \"goodies\" (autocollants et badges par exemple), des r\u00e9compenses...</p> </li> <li> <p>Pr\u00e9voir l'\u00e9quipement informatiquePour organiser la NDC dans votre \u00e9tablissement, vous aurez besoin d'ordinateurs fixes ou portables ou de tablettes (un appareil ou plus par \u00e9quipe). Pr\u00e9voir des terminaux (ordinateurs/tablettes) disponibles en nombre suffisant. Il est crucial de v\u00e9rifier votre capacit\u00e9 d'accueil. Les \u00e9l\u00e8ves peuvent apporter leur propre terminal. Le jeu peut se faire soit en ligne (dans ce cas les \u00e9l\u00e8ves devront avoir un compte pour se connecter) soit en d\u00e9connect\u00e9 (installation de Scratch 3 n\u00e9cessaire sur les terminaux utilis\u00e9s). Pour Python, la derni\u00e8re version de Pyxel doit \u00eatre install\u00e9e sur les terminaux (voir Installation de Pyxel). Pr\u00e9voir aussi des casques et des souris pour faciliter la cr\u00e9ations des jeux.</p> </li> <li> <p>Pr\u00e9voir une ou plusieurs sallesPr\u00e9voir un ou des espaces suffisamment grands. Les \u00e9quipes doivent avoir une surface de travail confortable. De plus, pendant toute la dur\u00e9e de l'\u00e9v\u00e9nement, on encourage les \u00e9l\u00e8ves \u00e0 aller observer le travail des autres, \u00e0 \u00e9changer, s'entraider... Il faut donc que les \u00e9l\u00e8ves (tout comme les encadrants) puissent circuler ais\u00e9ment.</p> </li> <li> <p>Pr\u00e9parer les \u00e9l\u00e8vesLa NDC est avant tout une f\u00eate et un jeu. Et pour que les \u00e9l\u00e8ves puissent pleinement en profiter, il est pr\u00e9f\u00e9rable qu'ils soient pr\u00e9par\u00e9s \u00e0 la nature de l'\u00e9v\u00e9nement. L'\u00e9quipe de la NDC met \u00e0 votre disposition des ressources Scratch et Python pour organiser des entra\u00eenements. Il est important que les \u00e9l\u00e8ves participants puissent s'entra\u00eener un minimum quelles que soient les modalit\u00e9s (en classe, en atelier p\u00e9riscolaire, \u00e0 la maison, en temps libre ou limit\u00e9, avec des contraintes pr\u00e9cises ou de fa\u00e7on totalement autonome). La NDC se joue en \u00e9quipes (de 2 ou 3 \u00e9l\u00e8ves) et cela demande aux \u00e9l\u00e8ves des qualit\u00e9s de collaboration et d'organisation. Cela n\u00e9cessite donc un peu de pr\u00e9paration.</p> </li> <li> <p>Pr\u00e9voir une \u00e9quipe d'encadrants pour le jour JLa NDC est  l'occasion d'impliquer les \u00e9quipes \u00e9ducatives, la direction et m\u00eame les parents. Le jour de l'\u00e9v\u00e9nement, il faut pr\u00e9voir suffisamment de personnes pour encadrer les \u00e9l\u00e8ves et aider \u00e0 la mise en place, \u00e0 la logistique et au rangement. Il n'est pas n\u00e9cessaire que toutes ces personnes ma\u00eetrisent la programmation Scratch ou Python. De plus, les encadrants ne sont pas oblig\u00e9s d'\u00eatre pr\u00e9sents sur toute la dur\u00e9e de l'\u00e9v\u00e9nement. Des cr\u00e9neaux peuvent \u00eatre d\u00e9finis et un tableau de pr\u00e9sence peut \u00eatre mis en place. Les moments qui n\u00e9cessitent un encadrement accru sont au d\u00e9but, lors de la pause nourriture / boissons et \u00e0 la fin de l'\u00e9v\u00e9nement. </p> </li> <li> <p>Penser aux autorisations parentalesIl peut \u00eatre n\u00e9cessaire d'obtenir des autorisations parentales. Notamment si l'\u00e9v\u00e9nement est programm\u00e9 en dehors des heures de cours. Cette d\u00e9marche peut prendre du temps (d\u00e9lais de r\u00e9ponse des familles, relances, corrections...). Une bonne anticipation est donc n\u00e9cessaire.</p> </li> <li> <p>Pr\u00e9voir \u00e0 manger et \u00e0 boireNos jeunes codeurs ne tiendront pas 6 heures sans s'alimenter ! De plus, la NDC se veut un \u00e9v\u00e9nement convivial. La ou les pauses nourriture / boissons y contribuent. Pr\u00e9voir un coin nourriture et boissons est donc important et fait partie de cette ambiance qui doit \u00eatre d\u00e9tendue et m\u00eame festive. Les services de cantine peuvent \u00eatre sollicit\u00e9s.</p> </li> </ul>"},{"location":"02-organisation/#b-taches-facultatives","title":"B. T\u00c2CHES FACULTATIVES","text":"<ul> <li> <p>CommuniquerDes affiches, des mod\u00e8les d'annonce et de courriels (\u00e0 l'attention des \u00e9l\u00e8ves ou des familles) et un court diaporama de pr\u00e9sentation de la NDC sont propos\u00e9s (voir \"Communication &amp; 'Goodies'\"). Vous pouvez ainsi solliciter des coll\u00e8gues pour qu'ils pr\u00e9sentent le diaporama au d\u00e9but d'un de leurs cours. Vous pouvez aussi publier des annonces sur le site de l'\u00e9tablissement ou via la lettre d'information. </p> </li> <li> <p>Pr\u00e9voir des \"Goodies\" / r\u00e9compensesSi le budget le permet, vous pouvez pr\u00e9voir des \"goodies\" (autocollants, badges, tasses...). Plusieurs visuels sont \u00e0 votre disposition (voir \"Communication &amp; 'Goodies'\"). Ils peuvent \u00eatre offerts \u00e0 tous les \u00e9l\u00e8ves participants. Chaque \u00e9tablissement peut aussi d\u00e9cider de r\u00e9compenser ses meilleures \u00e9quipes en leur offrant un prix. Mais ceci est optionnel. Une petite c\u00e9r\u00e9monie avec remise de dipl\u00f4mes suffit pour marquer la fin de l'\u00e9v\u00e9nement et faire plaisir aux \u00e9l\u00e8ves.</p> </li> <li> <p>Organiser des s\u00e9lectionsVous pourrez avoir besoin de r\u00e9aliser des s\u00e9lections si le nombre d'\u00e9l\u00e8ves qui souhaitent participer d\u00e9passe la capacit\u00e9 d'accueil de votre \u00e9tablissement (en mati\u00e8re de connexion \u00e0 Internet ou de nombre d'ordinateurs / tablettes disponibles). Des ressources Scratch ou Python sont pr\u00e9sentes sur le site pour organiser ces s\u00e9lections. Ces ressources vous permettront, si vous le souhaitez, de tester le niveau de vos \u00e9l\u00e8ves et, \u00e9ventuellement, de les s\u00e9lectionner. Il est conseill\u00e9 de faire ces \u00e9valuations en \u00e9quipes.</p> </li> <li> <p>Solliciter des intervenantsSi vous avez la possibilit\u00e9 de faire venir, en ouverture de la NDC, un ou plusieurs intervenants capables de pr\u00e9senter le monde de la programmation ou du jeu vid\u00e9o, n'h\u00e9sitez pas. Ces pr\u00e9sentations (qui doivent \u00eatre courtes) permettent de lancer en douceur l'\u00e9v\u00e9nement et peuvent s'inscrire dans la cadre du travail d'orientation des \u00e9l\u00e8ves. Les intervenants peuvent aussi \u00eatre des \u00e9l\u00e8ves qui pr\u00e9sentent un projet qu'ils ont men\u00e9 durant l'ann\u00e9e.</p> </li> <li> <p>Proposer un regroupement d'\u00e9tablissementsSi dans votre zone g\u00e9ographique plusieurs \u00e9tablissements sont int\u00e9ress\u00e9s et que la situation sanitaire le permet, regrouper les \u00e9tablissements permet de garantir un \u00e9v\u00e9nement encore plus festif et attractif.</p> </li> <li> <p>Inviter des \u00e9coles localesPour les \u00e9tablissements fran\u00e7ais de l'\u00e9tranger, inviter des \u00e9coles locales peut donner une autre dimension \u00e0 l'\u00e9v\u00e9nement. Cela permet de cr\u00e9er des \u00e9quipes mixtes, de favoriser les \u00e9changes entre les \u00e9quipes (enseignantes et/ou de direction) des diff\u00e9rents \u00e9tablissements et de tisser des liens qui peuvent d\u00e9boucher sur d'autres projets communs.</p> </li> </ul>"},{"location":"02-organisation/#c-pour-le-jour-j","title":"C. POUR LE JOUR J","text":"<p>\u00c0 quelques jours de la NDC, des v\u00e9rifications s'imposent :</p> <ul> <li>V\u00e9rifier les salles</li> <li>V\u00e9rifier l'\u00e9quipement informatique</li> <li>Faire le point avec l'\u00e9quipe d'encadrement</li> <li>V\u00e9rifier que les documents \u00e0 distribuer aux \u00e9quipes sont imprim\u00e9s (voir \"R\u00e8gles et conseils\")</li> <li>S'assurer que la nourriture et les boissons sont en quantit\u00e9s suffisantes</li> <li>S'assurer que les \"goodies\" / r\u00e9compenses sont pr\u00eats (si cela est pr\u00e9vu)</li> <li>Confirmer la pr\u00e9sence du ou des intervenants (si cela est pr\u00e9vu)</li> <li>Faire le point avec l'\u00e9tablissement invit\u00e9 (si cela est pr\u00e9vu)</li> </ul>"},{"location":"02-organisation/#d-depot-des-jeux","title":"D. D\u00c9P\u00d4T DES JEUX","text":"<p>Il n'est pas obligatoire de d\u00e9poser les jeux sur le site de la NDC mais cela facilite grandement la phase d'\u00e9valuation et de s\u00e9lection des jeux. En effet, pour l'\u00e9valuation, le site propose une interface qui permet d'\u00e9valuer facilement tous les jeux et d'ajouter automatiquement les jeux s\u00e9lectionn\u00e9s \u00e0 la liste des jeux qui seront \u00e9valu\u00e9s pour la s\u00e9lection internationale.</p> <p>Si les jeux n'ont pas pu \u00eatre d\u00e9pos\u00e9s sur le site de la NDC par les \u00e9l\u00e8ves \u00e0 cause d'un probl\u00e8me technique ou faute de connexion internet, ce d\u00e9p\u00f4t peut \u00eatre r\u00e9alis\u00e9 par les enseignants.</p>"},{"location":"02-organisation/#depot-de-jeux-scratch","title":"D\u00e9p\u00f4t de jeux Scratch","text":"<p>Ce qui suit est \u00e0 r\u00e9aliser par un enseignant dans le cas o\u00f9 les \u00e9l\u00e8ves n'ont pas pu d\u00e9poser eux-m\u00eame leur jeu sur le site (probl\u00e8me technique, pas de connexion internet...).</p> <ul> <li>R\u00e9cup\u00e9rer les fichiers <code>.sb3</code></li> <li>Charger les fichiers <code>.sb3</code> sur un compte Scratch</li> <li>Partager les jeux en cliquant sur le bouton orange \u00ab Partager \u00bb (\u00ab Share \u00bb en anglais).</li> <li>Se connecter \u00e0 la console de la NDC (www.nuitducode.net/console)</li> <li>Ajouter les identifiant des jeux (si l'adresse est <code>https://scratch.mit.edu/projects/6535</code>, l'identifiant est <code>6535</code>) dans la zone de saisie (les identifiant peuvent \u00eatre ajout\u00e9s un par un ou par lots).</li> </ul> <p> </p>"},{"location":"02-organisation/#depot-de-jeux-python-pyxel","title":"D\u00e9p\u00f4t de jeux Python / Pyxel","text":"<p>Ce qui suit est \u00e0 r\u00e9aliser par un enseignant dans le cas o\u00f9 les \u00e9l\u00e8ves n'ont pas pu d\u00e9poser eux-m\u00eame leur jeu sur le site (probl\u00e8me technique, pas de connexion internet...).</p> <ul> <li>R\u00e9cup\u00e9rer le fichier <code>app.py</code> et, s'il existe, le fichier <code>.pyxres</code></li> <li>Se connecter \u00e0 la console de la NDC (www.nuitducode.net/console)</li> <li>D\u00e9poser le ou les fichiers dans la section d\u00e9di\u00e9e.</li> </ul> <p> </p>"},{"location":"02-organisation/#e-evaluation-des-jeux","title":"E. \u00c9VALUATION DES JEUX","text":"<p>L'\u00e9valuation des jeux n'est obligatoire que si vous souhaitez proposer des jeux pour la s\u00e9lection internationale. Chaque \u00e9tablissement peut proposer deux jeux par cat\u00e9gorie.</p> <p>Cette phase d'\u00e9valuation est cependant un moment convivial o\u00f9 les \u00e9l\u00e8ves d\u00e9couvrent les jeux de leurs camarades et o\u00f9 les enseignants et les encadrants prennent la mesure du travail accompli. Cela permet aussi de clore la NDC avec une c\u00e9r\u00e9monie de remise de dipl\u00f4mes et, \u00e9ventuellement, de r\u00e9compenses.</p> <p>L'\u00e9valuation des jeux et la c\u00e9r\u00e9monie peuvent se faire \u00e0 la suite ou s\u00e9par\u00e9ment, tout de suite apr\u00e8s les 6h ou quelques jours apr\u00e8s. Attention cependant \u00e0 ne pas d\u00e9passer la date limite s'il est pr\u00e9vu de proposer des jeux pour la s\u00e9lection internationale.</p> <p>Les jeux qui auront \u00e9t\u00e9 d\u00e9pos\u00e9s sur le site de la NDC pourront \u00eatre \u00e9valu\u00e9s en ligne. Si les jeux n'ont pas \u00e9t\u00e9 enregistr\u00e9s sur le site, les \u00e9tablissements peuvent s'organiser comme ils le souhaitent pour d\u00e9finir la liste des jeux s\u00e9lectionn\u00e9s. Seule contrainte: respecter les crit\u00e8res d'\u00e9valuation.</p> <p>Crit\u00e8res d'\u00e9valuation (chaque crit\u00e8re est not\u00e9 sur 5) :</p> <ul> <li>Jouabilit\u00e9</li> <li>Richesse / Complexit\u00e9</li> <li>Originalit\u00e9 / Cr\u00e9ativit\u00e9</li> <li>Respect des consignes / Documentation</li> </ul> <p> </p>"},{"location":"02-organisation/#f-participation-la-selection-internationale","title":"F. PARTICIPATION LA S\u00c9LECTION INTERNATIONALE","text":"<ul> <li>Si la s\u00e9lection s'est faite en ligne, vous n'avez rien \u00e0 faire de plus. Les jeux s\u00e9lectionn\u00e9s pour l'\u00e9tablissement sont automatiquement ajout\u00e9s \u00e0 la liste des jeux qui seront \u00e9valu\u00e9s pour la s\u00e9lection internationale.</li> <li>Si la s\u00e9lection s'est faite sans utiliser le site de la NDC, les enseignants peuvent d\u00e9poser les jeux s\u00e9lectionn\u00e9s sur le site en utilisant le lien qui leur sera fourni.</li> </ul>"},{"location":"02-organisation/#g-feuille-de-route-ressources","title":"G. FEUILLE DE ROUTE &amp; RESSOURCES","text":"<p>Cas d'une organisation minimale (pas de commande de nourriture / boissons, pas de \"goodies\", pas d'intervenants, pas de r\u00e9compenses...).</p>  Actions  P\u00e9riode approximative  Personnes impliqu\u00e9es  Ressources Inscrire l'\u00e9tablissement de septembre 2023 \u00e0 avril 2024 organisateur(s) www.nuitducode.net Choisir la date de l'\u00e9v\u00e9nement de septembre 2023 \u00e0 avril 2024 organisateur(s) / direction Inscrire les \u00e9l\u00e8ves et les \u00e9quipes de septembre 2023 \u00e0 avril 2024 organisateur(s) Communiquer de septembre 2023 \u00e0 avril 2024 organisateur(s) / \u00e9quipes enseignantes / direction affiches, diaporama... Entra\u00eener / s\u00e9lectionner les \u00e9l\u00e8ves de janvier \u00e0 avril 2024 organisateur(s) / \u00e9quipes enseignantes  tutoriels et sujets d'entra\u00eenement / s\u00e9lection: Scratch - Python Pr\u00e9voir nourriture et boissons avril / mai 2024 organisateur(s) / \u00e9quipes enseignantes / direction / familles Choisir les salles avril / mai 2024 organisateur(s) / direction Pr\u00e9parer le jour J mai 2024 organisateur(s) / \u00e9quipes enseignantes / direction / familles \"R\u00e8gles et conseils\" / \"Carnet de bord\" \u00c9valuer les jeux mai 2024 organisateur(s) / \u00e9quipes enseignantes / \u00e9l\u00e8ves www.nuitducode.net Organiser une remise de dipl\u00f4mes \u00e0 la fin de la NDC ou quelques jours plus tard organisateur(s) / \u00e9quipes enseignantes / direction / familles  mod\u00e8les de dipl\u00f4mes  disponibles prochainement"},{"location":"02-organisation/#h-un-exemple-dorganisation","title":"H. UN EXEMPLE D'ORGANISATION","text":"<p>Attention, il s'agit bien d'un exemple, et non pas d'un mod\u00e8le. Voici les principaux points concernant l'organisation de la NDC au Lyc\u00e9e Fran\u00e7ais International de Tokyo : </p> <ul> <li>Le Lyc\u00e9e Fran\u00e7ais International de Tokyo accueillera les \u00e9l\u00e8ves du Lyc\u00e9e Fran\u00e7ais International de Kyoto et d'une \u00e9cole japonaise locale. </li> <li>Deux ou trois intervenants ext\u00e9rieurs viendront faire de courtes pr\u00e9sentations.</li> <li>Chaque \u00e9l\u00e8ve sera \u00e9quip\u00e9 d'un Chromebook.</li> <li>L'\u00e9tablissement sera d\u00e9cor\u00e9 par des \u00e9l\u00e8ves du primaire et du secondaire (th\u00e8mes pixel-art et r\u00e9tro-gaming).</li> <li>Un buffet (pizzas, snacks vari\u00e9s et boissons) sera propos\u00e9 durant l'\u00e9v\u00e9nement.</li> <li>Les jeux r\u00e9alis\u00e9s seront test\u00e9s et \u00e9valu\u00e9s par les \u00e9l\u00e8ves et des enseignants tout de suite apr\u00e8s les 6h (nous ferons une pause de 30 minutes avant).</li> <li>Une remise de r\u00e9compenses se fera dans la foul\u00e9e pour les meilleures \u00e9quipes des diff\u00e9rentes cat\u00e9gories.</li> </ul>"},{"location":"02-organisation/#nous-comptons-sur-vous","title":"NOUS COMPTONS SUR VOUS !","text":"<p>Vous l'aurez compris, le bon d\u00e9roulement de la NDC dans votre \u00e9tablissement repose en grande partie sur une bonne pr\u00e9paration. Inutile, lors d'une premi\u00e8re participation de vouloir trop en faire : des ordinateurs et de quoi grignoter suffiront \u00e0 passer un tr\u00e8s bon moment. Vous pourrez toujours faire plus et mieux les ann\u00e9es suivantes !</p> <p></p> <p>Si des points restent peu clairs ou si ce document ne r\u00e9pond pas \u00e0 vos questions, n'h\u00e9sitez pas \u00e0 utiliser l'espace de discussions ou \u00e0 prendre contact avec l'\u00e9quipe organisatrice en \u00e9crivant \u00e0 contact@nuitducode.net.</p>"},{"location":"03-communication-et-goodies/","title":"COMMUNICATION &amp; \"GOODIES\"","text":""},{"location":"03-communication-et-goodies/#affiches","title":"AFFICHES","text":"<p>Voir le g\u00e9n\u00e9rateur d'affiche.</p>"},{"location":"03-communication-et-goodies/#certificats-de-participation","title":"CERTIFICATS DE PARTICIPATION","text":"<ul> <li>Certificat de participation Scratch</li> <li>Certificat de participation Python</li> </ul>"},{"location":"03-communication-et-goodies/#compte-a-rebours","title":"COMPTE \u00c0 REBOURS","text":"<p>Compte \u00e0 rebours \u00e0 lancer en d\u00e9but de NDC.</p>"},{"location":"03-communication-et-goodies/#diaporama","title":"DIAPORAMA","text":"<p>Ouvrir le diaporama.</p>"},{"location":"03-communication-et-goodies/#visuels","title":"VISUELS","text":"<p>Pour la communication ou pour cr\u00e9er des autocollants, des badges, des t-shirts, des tasses...</p> png - svg png - svg png - svg png - svg png - svg png - svg"},{"location":"03-communication-et-goodies/#objets-3d","title":"OBJETS 3D","text":"<p>Porte cl\u00e9</p> Fichiers\u00a0STL        \u25fe base        \u25fe lettres <p>Support pour t\u00e9l\u00e9phone</p> Fichier\u00a0STL        \u25fe support"},{"location":"03-communication-et-goodies/#air-pyxel","title":"AIR PYXEL","text":"<p>Station de jeu interactive \u00e0 installer dans un \u00e9tablissement.</p> Mat\u00e9riel n\u00e9cessaire: <ul> <li>ordinateur (station, portable, raspberry pi...)</li> <li>\u00e9cran ou vid\u00e9oprojecteur</li> <li>webcam</li> </ul> Lien: nuitducode.github.io/air-pyxel-demo Il suffit de brancher la webcam et d'ouvrir le lien. Code &amp; pr\u00e9sentation: air-pyxel-demo Optionnel: pr\u00e9senter des posters sur l'intelligence artificielle."},{"location":"04-regles-conseils/","title":"R\u00c8GLES ET CONSEILS","text":"<p>Documents au format PDF</p> <ul> <li>R\u00e8gles et conseils Scratch</li> <li>R\u00e8gles et conseils Python</li> </ul>"},{"location":"04-regles-conseils/#scratch","title":"SCRATCH","text":"<p>Durant la NDC, vous disposerez de 6 heures pour cr\u00e9er un jeu avec Scratch. Pour cela, vous devrez utiliser l'un des univers de jeu mis \u00e0 votre disposition. Ces univers de jeu ne contiennent aucun script, mais poss\u00e8dent de nombreux lutins, des sc\u00e8nes et des sons.</p>"},{"location":"04-regles-conseils/#les-regles","title":"LES R\u00c8GLES","text":"<p>IMPORTANT</p> <ul> <li>Les univers de jeu et les liens fournis sont confidentiels. Ils ne doivent \u00eatre partag\u00e9s avec personne d'autre, ni pendant, ni apr\u00e8s la NDC.</li> <li>Le titre de votre jeu doit \u00eatre le nom de votre \u00e9quipe. Les mots suivants ne doivent appara\u00eetre ni dans le titre ni dans les champs \u00ab Instructions \u00bb ou \u00ab Notes et Cr\u00e9dits \u00bb de votre jeu (ou des diff\u00e9rentes versions de votre jeu): \u00ab nuit \u00bb, \u00ab code \u00bb, \u00ab c0de \u00bb, \u00ab 2023 \u00bb, \u00ab NdC \u00bb, \u00ab ndc \u00bb.</li> <li>Le respect des consignes fait partie de l\u2019\u00e9valuation du jeu.</li> </ul> <ul> <li>Vous devez choisir un univers de jeu parmi ceux propos\u00e9s. Prenez le temps de bien \u00e9tudier les diff\u00e9rents univers de jeu (lutins, costumes, d\u00e9cors\u2026) avant d'en choisir un. Cet univers devient le point de d\u00e9part de votre jeu. Vous ne pouvez cr\u00e9er votre jeu qu'\u00e0 partir des \u00e9l\u00e9ments que vous trouvez dans l'univers de jeu que vous avez choisi sans y ajouter aucun \u00e9l\u00e9ment ext\u00e9rieur.</li> <li>Vous devez \u00e9crire une courte documentation (ou mode d'emploi) de votre jeu. Cette documentation doit \u00eatre plac\u00e9e dans le champ \u00ab Instructions \u00bb. La documentation fait partie de l'\u00e9valuation du jeu.</li> <li>Il n'est pas autoris\u00e9 d'importer des lutins, sc\u00e8nes ou sons (de la biblioth\u00e8que Scratch, depuis Internet ou votre ordinateur) dans votre projet. Seuls ceux fournis dans l'univers de jeu doivent \u00eatre utilis\u00e9s.</li> <li>Il n'est pas autoris\u00e9 de regarder ou de copier/coller des scripts d'autres projets trouv\u00e9s sur la plateforme Scratch ou sur votre ordinateur.</li> <li>Il n'est pas autoris\u00e9 d'aller chercher des informations ou de l'aide sur internet ou sur votre ordinateur.</li> <li>Il n'est pas autoris\u00e9 d'utiliser des notes personnelles ou de la documentation papier.</li> <li>Il est autoris\u00e9, et m\u00eame conseill\u00e9, de demander de l'aide aux enseignants qui encadrent la NDC. Ils ne vous donneront pas un code complet, mais certainement de bons conseils pour avancer.</li> <li>Il est autoris\u00e9, et m\u00eame conseill\u00e9, de demander de l'aide \u00e0 vos camarades des autres \u00e9quipes participantes. La NDC est un \u00e9v\u00e9nement festif et l'entraide est fortement recommand\u00e9e.</li> <li>Vous avez le droit de dupliquer des lutins si vous en avez besoin.</li> <li>Les \u00e9l\u00e9ments du jeu vous sugg\u00e8rent peut-\u00eatre de cr\u00e9er un jeu que vous connaissez d\u00e9j\u00e0, mais vous \u00eates tout \u00e0 fait libre de proposer autre chose.</li> <li>Vous avez le droit de faire des \u00ab retouches \u00bb graphiques mineures sur les lutins ou les sc\u00e8nes: sym\u00e9trie, rotation, changer une couleur, d\u00e9former, ajout de texte\u2026 mais attention \u00e0 ne pas y passer trop de temps. Il est quand m\u00eame conseill\u00e9 d'\u00e9viter: il y a suffisamment de lutins (et certains ont beaucoup de costumes) pour trouver ce dont vous avez besoin.</li> <li>Vous avez le droit de cr\u00e9er des lutins qui serviraient de \u00ab capteur \u00bb lors des d\u00e9placements (juste un rectangle ou un cercle) ou des lutins \u00ab texte \u00bb.</li> <li>Vous n'\u00eates pas oblig\u00e9 d'utiliser tous les lutins, sc\u00e8nes ou sons de l'univers de jeu.</li> </ul>"},{"location":"04-regles-conseils/#quelques-conseils","title":"QUELQUES CONSEILS","text":"<ul> <li>Avant de vous lancer dans le code, prenez le temps d'imaginer votre jeu. Passez en revue tous les lutins et tous leurs costumes (qui sont parfois nombreux). Pr\u00e9voyez de r\u00e9aliser rapidement une version simple, mais jouable de votre jeu. Puis, si vous en avez le temps, rajoutez au fur et \u00e0 mesure des \u00e9l\u00e9ments de complexit\u00e9: niveau de difficult\u00e9, scores, son, etc.</li> <li>Vous travaillez \u00e0 deux ou trois: organisez-vous pour \u00eatre les plus efficaces possible.</li> <li>Pensez \u00e0 sauvegarder ! Et surtout, effectuez r\u00e9guli\u00e8rement des copies incr\u00e9ment\u00e9es (version 1, 2, 3\u2026) de votre jeu \u00e0 chaque am\u00e9lioration majeure (qui marche). Scratch ne permet pas d'annuler des modifications\u2026</li> <li>N'oubliez pas de faire des pauses, d'aller voir ce que font les autres, de boire et de manger !</li> <li>Et surtout, rappelez-vous: c'est un jeu ! Amusez-vous !</li> </ul>"},{"location":"04-regles-conseils/#important-a-la-fin-des-6h","title":"IMPORTANT: \u00c0 LA FIN DES 6h","text":""},{"location":"04-regles-conseils/#cas-1-si-vous-avez-cree-votre-jeu-en-ligne-avec-un-compte-scratch","title":"Cas 1: si vous avez cr\u00e9\u00e9 votre jeu en ligne avec un compte Scratch","text":"<ul> <li>Partagez votre jeu en cliquant sur le bouton orange \u00ab Partager \u00bb (\u00ab Share \u00bb en anglais).</li> <li>Enregistrez votre jeu sur le site de la NDC.</li> </ul> <p>Pour enregistrer votre jeu sur le site de la NDC, un lien vous sera fourni. Ce lien vous am\u00e8nera sur la page d'enregistrement. Sur cette page, vous devrez indiquer le nom de votre \u00e9quipe, votre cat\u00e9gorie et l'identifiant de votre projet. L'identifiant du projet est la suite de chiffres pr\u00e9sente dans son adresse. Exemple: si l'adresse est <code>https://scratch.mit.edu/projects/6535</code>, l'identifiant est <code>6535</code>.</p> <p>Apr\u00e8s avoir d\u00e9pos\u00e9 votre jeu, vous n'aurez plus le droit de le modifier. Les jeux modifi\u00e9s apr\u00e8s le d\u00e9p\u00f4t ne seront pas \u00e9valu\u00e9s.</p>"},{"location":"04-regles-conseils/#cas-2-si-vous-avez-cree-votre-jeu-sans-connexion-internet","title":"Cas 2: si vous avez cr\u00e9\u00e9 votre jeu sans connexion internet","text":"<p>Rendre le fichier <code>.sb3</code> en suivant les consignes fournies par votre enseignant.</p>"},{"location":"04-regles-conseils/#criteres-devaluation","title":"CRIT\u00c8RES D'\u00c9VALUATION","text":"<p>Chaque crit\u00e8re est not\u00e9 sur 5:</p> <ul> <li>Jouabilit\u00e9  <code>~ un jeu qui ne marche pas ne sera pas \u00e9valu\u00e9 ~</code></li> <li>Richesse / Complexit\u00e9</li> <li>Originalit\u00e9 / Cr\u00e9ativit\u00e9</li> <li>Respect des consignes / Documentation</li> </ul>"},{"location":"04-regles-conseils/#python-pyxel","title":"PYTHON / PYXEL","text":"<p>Durant la NDC, vous disposerez de 6 heures pour cr\u00e9er un jeu avec Python / Pyxel. Pour cela, vous pouvez utiliser les ressources (fichiers .pyxres) mises \u00e0 votre disposition ou respecter un deux th\u00e8mes en partant d'un fichier .pyxres vide ou en n'utilisant que des formes g\u00e9om\u00e9triques.</p>"},{"location":"04-regles-conseils/#les-regles_1","title":"LES R\u00c8GLES","text":"<p>IMPORTANT</p> <ul> <li>Les univers de jeu et les liens fournis sont confidentiels. Ils ne doivent \u00eatre partag\u00e9s avec personne d'autre, ni pendant, ni apr\u00e8s la NDC.</li> <li>Le respect des consignes fait partie de l\u2019\u00e9valuation du jeu.    </li> </ul> <ul> <li>Vous devez choisir un univers de jeu parmi ceux propos\u00e9s (fichiers .pyxres) ou respecter un des deux th\u00e8mes. Prenez le temps de bien \u00e9tudier les diff\u00e9rents univers de jeu avant d'en choisir un. Si vous pr\u00e9f\u00e9rez un des deux th\u00e8mes, vous pouvez utiliser le fichier res.pyxres vide ou n'utiliser que des formes g\u00e9om\u00e9triques.</li> <li>Vous devez \u00e9crire une courte documentation (ou mode d'emploi) de votre jeu. La documentation fait partie de l'\u00e9valuation du jeu.</li> <li>Vous devez fixer la taille de l\u2019\u00e9cran \u00e0 128x128 pixels (pyxel.init(128, 128, title=\"NDC 2023\")).</li> <li>Vous devez mettre le code de votre jeu dans un seul fichier ndc.py. Si vous utilisez des images, elles seront dans un deuxi\u00e8me fichier au format .pyxres.</li> <li>Il n'est pas autoris\u00e9 de regarder ou de copier/coller du code trouv\u00e9 sur internet ou sur votre ordinateur.</li> <li>Il n'est pas autoris\u00e9 d'importer des fichiers contenant du code (fichiers .py) ou des images (fichiers .pyxres).</li> <li>Il n'est pas autoris\u00e9 de modifier les images des banques d'images des fichiers .pyxres fournis (par contre, vous pouvez utiliser librement les \u00e9diteurs de \"tilemaps\", de sons et de musiques).</li> <li>Il n'est pas autoris\u00e9 d'aller chercher des informations ou de l'aide sur internet ou sur votre ordinateur.</li> <li>Il n'est pas autoris\u00e9 d'utiliser des notes personnelles ou de la documentation papier autre que celle fournie.</li> <li>Il est autoris\u00e9, et m\u00eame conseill\u00e9, de demander de l'aide aux enseignants qui encadrent la NDC. Ils ne vous donneront pas un code complet, mais certainement de bons conseils pour avancer.</li> <li>Il est autoris\u00e9, et m\u00eame conseill\u00e9, de demander de l'aide \u00e0 vos camarades des autres \u00e9quipes participantes. La NDC est un \u00e9v\u00e9nement festif et l'entraide est fortement recommand\u00e9e.</li> <li>Vous n'\u00eates pas oblig\u00e9 d'utiliser tous les \u00e9l\u00e9ments graphiques du fichier .pyxres.</li> </ul>"},{"location":"04-regles-conseils/#quelques-conseils_1","title":"QUELQUES CONSEILS","text":"<ul> <li>Avant de vous lancer dans le code, prenez le temps d'imaginer votre jeu. Passez en revue les ressources. Pr\u00e9voyez de r\u00e9aliser rapidement une version simple, mais jouable de votre jeu. Puis, si vous en avez le temps, rajoutez au fur et \u00e0 mesure des \u00e9l\u00e9ments de complexit\u00e9: niveau de difficult\u00e9, scores, son, etc.</li> <li>Vous travaillez \u00e0 deux ou trois: organisez-vous pour \u00eatre les plus efficaces possible.</li> <li>Pensez \u00e0 sauvegarder ! Et surtout, effectuez r\u00e9guli\u00e8rement des copies incr\u00e9ment\u00e9es (version 1, 2, 3\u2026) de votre jeu \u00e0 chaque am\u00e9lioration majeure (qui marche) en t\u00e9l\u00e9chargeant le fichier <code>ndc.py</code>.</li> <li>N'oubliez pas de faire des pauses, d'aller voir ce que font les autres, de boire et de manger !</li> <li>Et surtout, rappelez-vous: c'est un jeu ! Amusez-vous !</li> </ul>"},{"location":"04-regles-conseils/#important-a-la-fin-des-6h_1","title":"IMPORTANT: \u00c0 LA FIN DES 6h","text":""},{"location":"04-regles-conseils/#cas-1-si-vous-avez-cree-votre-jeu-en-ligne-sur-le-site-de-la-ndc","title":"Cas 1: si vous avez cr\u00e9\u00e9 votre jeu en ligne sur le site de la NDC","text":"<p>T\u00e9l\u00e9chargez sur votre machine le fichier ndc.py et le fichier .pyxres si vous en avez utilis\u00e9 un. Ensuite, enregistrez votre jeu sur le site de la NDC en utilisant le lien fourni par votre enseignant. Ce lien vous am\u00e8nera sur la page d'enregistrement. Sur cette page, vous devrez indiquer le nom de votre \u00e9quipe, s\u00e9lectionner votre cat\u00e9gorie, d\u00e9poser votre fichier ndc.py et, s'il existe, le fichier .pyxres et enfin copier-coller la documentation / mode d'emploi du jeu.</p>"},{"location":"04-regles-conseils/#cas-2-si-vous-avez-cree-votre-jeu-sans-connexion-internet_1","title":"Cas 2: si vous avez cr\u00e9\u00e9 votre jeu sans connexion internet","text":"<p>Enregistrez votre jeu sur le site de la NDC en utilisant le lien fourni par votre enseignant. Ce lien vous am\u00e8nera sur la page d'enregistrement. Sur cette page, vous devrez indiquer le nom de votre \u00e9quipe, s\u00e9lectionner votre cat\u00e9gorie, d\u00e9poser votre fichier ndc.py et, s'il existe, le fichier .pyxres et enfin copier-coller la documentation / mode d'emploi du jeu.</p> <p>Si vous n'avez pas la possibilit\u00e9 de d\u00e9poser vous-m\u00eame ces fichiers sur le site, donnez-les \u00e0 votre enseignant.</p>"},{"location":"04-regles-conseils/#criteres-devaluation_1","title":"CRIT\u00c8RES D'\u00c9VALUATION","text":"<p>Chaque crit\u00e8re est not\u00e9 sur 5:</p> <ul> <li>Jouabilit\u00e9  <code>~ un jeu qui ne marche pas ne sera pas \u00e9valu\u00e9 ~</code></li> <li>Richesse / Complexit\u00e9</li> <li>Originalit\u00e9 / Cr\u00e9ativit\u00e9</li> <li>Respect des consignes / Documentation</li> </ul>"},{"location":"PYTHON/01-presentation/","title":"INTRODUCTION","text":"<p>Pour la NDC, les \u00e9l\u00e8ves d\u00e9velopperont leur jeu avec Pyxel, un moteur de jeu vid\u00e9o r\u00e9tro pour Python.</p> <p>Pour pr\u00e9parer la Nuit du c0de avec les \u00e9l\u00e8ves, voici plusieurs ressources qui permettent de mettre en place des s\u00e9ances de d\u00e9couverte / approfondissement de Python / Pyxel encadr\u00e9es ou en autonomie.</p> <ul> <li>Tutoriels au format \"cahier num\u00e9rique\":<ul> <li>Premiers pas avec Pyxel - Premi\u00e8re</li> <li>Premiers pas avec Pyxel - Terminale</li> <li>Tutoriel d\u00e9taill\u00e9 - Terminale</li> </ul> </li> <li>Tutoriels et exercices</li> <li>Univers de jeu Python / Pyxel 2022</li> </ul> <p>\"Gr\u00e2ce \u00e0 ses sp\u00e9cifications simples inspir\u00e9es par les consoles r\u00e9tro, comme le fait que seulement 16 couleurs peuvent \u00eatre affich\u00e9es et que seulement 4 sons peuvent \u00eatre lus en m\u00eame temps, vous pouvez vous sentir libre de cr\u00e9er des jeux vid\u00e9o dans le style pixel art. Les sp\u00e9cifications et les API de Pyxel sont inspir\u00e9es de PICO-8 et TIC-80. Pyxel est un logiciel libre et open source.\" </p> <p>Extrait de github.com/kitao/pyxel</p> <p> </p>"},{"location":"PYTHON/02-environnement-de-developpement/","title":"ENVIRONNEMENT DE D\u00c9VELOPPEMENT","text":"<p>Le d\u00e9veloppement des jeux peut se faire en ligne sur le site de la NDC ou avec l'environnement de d\u00e9veloppement de votre choix. </p> <p>Les \u00e9l\u00e8ves peuvent s'entra\u00eener avec les univers de jeu de l'an dernier \u00e0 cette adresse : www.nuitducode.net/pyxel.</p> <p>S'il ne vous est pas possible d'utiliser la version en ligne, vous pouvez installer Python/Pyxel sur des machines (postes fixes ou portables). </p> <p>Version de Pyxel</p> <p>Pour la NDC 2023, la version de Pyxel sera la 1.9.12.</p> <p>Pour Windows:</p> <ul> <li>T\u00e9l\u00e9charger Edupyter 38, 39 ou 310 selon votre environnement</li> <li>Installer Edupyter Edupyter est portable et ne n\u00e9cessite pas de droits administrateur. Edupyter peut \u00eatre install\u00e9 dans un dossier sur le disque dur ou sur une cl\u00e9 USB / disque amovible. L'installation ne fait que copier des fichiers et des dossiers dans le dossier d'installation choisi. Le syst\u00e8me n'est pas modifi\u00e9. Pour supprimer Edupyter il suffit de supprimer le dossier dans lequel il a \u00e9t\u00e9 install\u00e9.</li> <li>Lancer Edupyter et cliquer sur l'ic\u00f4ne qui appara\u00eet \u00e0 c\u00f4t\u00e9 de l'horloge (voir aide).</li> <li>Ouvrir Thonny</li> <li>Saisir le code et enregistrer le fichier Python (en .py).</li> <li>Ex\u00e9cuter le code en cliquant sur la touche F5 ou le bouton vert. Cette action ouvrira automatiquement la fen\u00eatre du jeu.</li> <li>Pour cr\u00e9er un fichier .pyxres, ouvrir la console, naviguer jusqu'au r\u00e9pertoire qui contient le fichier app.py et saisir pyxel edit nom-du-fichier.pyxres.</li> </ul> <p>Pour installer Python/Pyxel sur Mac ou Linux, voir la section \"Comment installer\" sur la page de Pyxel.</p> <p>Consignes</p> <p>Pour la NDC, les \u00e9l\u00e8ves doivent rendre un fichier app.py et, \u00e9ventuellement, un fichier .pyxres.</p>"},{"location":"PYTHON/03-univers-python-2022/","title":"UNIVERS DE JEU PYTHON / PYXEL 2022","text":"<p>Lien vers les univers de jeu 2022 (fichiers .pyxres): depot.nuitducode.net</p>"},{"location":"PYTHON/TUTORIELS/","title":"Sommaire","text":"<ul> <li>Premiers pas avec Pyxel - Premi\u00e8re</li> <li>Premiers pas avec Pyxel - Terminale</li> <li>Tutoriel d\u00e9taill\u00e9 - Terminale</li> <li>Autres tutoriels</li> </ul>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/","title":"Premiers pas avec Pyxel - Premi\u00e8re","text":"<p>Cahier Num\u00e9rique pour s'entra\u00eener</p> <p>Ce tutoriel est disponible au format Cahier Num\u00e9rique www.cahiernum.net/J682W5</p>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-01-deplacer-un-carre-avec-les-touches-de-directions","title":"\u00c9tape #01 - D\u00e9placer un carr\u00e9 avec les touches de directions","text":"<p>But : d\u00e9placer un carr\u00e9 avec les touches de directions</p> <p></p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code>import pyxel\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\npyxel.run(update, draw)\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-02-ajouter-des-tirs","title":"\u00c9tape #02 - Ajouter des tirs","text":"<p>But : ajouter des tirs</p> <p></p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code>import pyxel\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n# initialisation des tirs\ntirs_liste = []\ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\ndef tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\npyxel.run(update, draw)\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-03-ajouter-des-ennemis","title":"\u00c9tape #03 - Ajouter des ennemis","text":"<p>But : ajouter des ennemis</p> <p></p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code># on rajoute random\nimport pyxel, random\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n# initialisation des tirs\ntirs_liste = []\n# initialisation des ennemis\nennemis_liste = []\ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\ndef tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste)    \n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)        \npyxel.run(update, draw)\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-04-ajouter-les-collisions","title":"\u00c9tape #04 - Ajouter les collisions","text":"<p>But : ajouter les collisions</p> <p></p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code># on rajoute random\nimport pyxel, random\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n# vies\nvies = 1\n# initialisation des tirs\ntirs_liste = []\n# initialisation des ennemis\nennemis_liste = []\ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\ndef tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\ndef vaisseau_suppression(vies):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in ennemis_liste:\nif ennemi[0] &lt;= vaisseau_x+8 and ennemi[1] &lt;= vaisseau_y+8 and ennemi[0]+8 &gt;= vaisseau_x and ennemi[1]+8 &gt;= vaisseau_y:\nennemis_liste.remove(ennemi)\nvies = 0\nreturn vies\ndef ennemis_suppression():\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in ennemis_liste:\nfor tir in tirs_liste:\nif ennemi[0] &lt;= tir[0]+1 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nennemis_liste.remove(ennemi)\ntirs_liste.remove(tir)\n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste, vies\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste)\n# suppression des ennemis et tirs si contact\nennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nvies = vaisseau_suppression(vies)\n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif vies &gt; 0:    \n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)\n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\npyxel.run(update, draw)\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-05-ajouter-les-explosions-lors-des-collisions","title":"\u00c9tape #05 - Ajouter les explosions lors des collisions","text":"<p>But : ajouter les explosions lors des collisions</p> <p></p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code># on rajoute random\nimport pyxel, random\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n# vies\nvies = 4\n# initialisation des tirs\ntirs_liste = []\n# initialisation des ennemis\nennemis_liste = []\n# initialisation des explosions\nexplosions_liste = []  \ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\ndef tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\ndef vaisseau_suppression(vies):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in ennemis_liste:\nif ennemi[0] &lt;= vaisseau_x+8 and ennemi[1] &lt;= vaisseau_y+8 and ennemi[0]+8 &gt;= vaisseau_x and ennemi[1]+8 &gt;= vaisseau_y:\nennemis_liste.remove(ennemi)\nvies -= 1\n# on ajoute l'explosion\nexplosions_creation(vaisseau_x, vaisseau_y)\nreturn vies\ndef ennemis_suppression():\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in ennemis_liste:\nfor tir in tirs_liste:\nif ennemi[0] &lt;= tir[0]+1 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nennemis_liste.remove(ennemi)\ntirs_liste.remove(tir)\n# on ajoute l'explosion\nexplosions_creation(ennemi[0], ennemi[1])\ndef explosions_creation(x, y):\n\"\"\"explosions aux points de collision entre deux objets\"\"\"\nexplosions_liste.append([x, y, 0])\ndef explosions_animation():\n\"\"\"animation des explosions\"\"\"\nfor explosion in explosions_liste:\nexplosion[2] +=1\nif explosion[2] == 12:\nexplosions_liste.remove(explosion)                \n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste, vies, explosions_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste)\n# suppression des ennemis et tirs si contact\nennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nvies = vaisseau_suppression(vies)\n# evolution de l'animation des explosions\nexplosions_animation()    \n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif vies &gt; 0:\n# affichage des vies            \npyxel.text(5,5, 'VIES:'+ str(vies), 7)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)\n# explosions (cercles de plus en plus grands)\nfor explosion in explosions_liste:\npyxel.circb(explosion[0]+4, explosion[1]+4, 2*(explosion[2]//4), 8+explosion[2]%3)            \n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\npyxel.run(update, draw)\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-06-ajouter-les-images","title":"\u00c9tape #06 - Ajouter les images","text":"<p>But : ajouter les images</p> <p> </p> <p>Pour ouvrir l'\u00e9diteur d'image : ouvrir la console (avec Edupyter depuis Thonny : \"Outils\" &gt; \"Ouvrir la console du syst\u00e8me...\", ou depuis le menu d'Edupyter : \"Console\") et saisir :</p> <pre><code>pyxel edit [PYXEL_RESOURCE_FILE]\n</code></pre> <p>\"Si le fichier de ressource Pyxel (.pyxres) existe d\u00e9j\u00e0, le fichier est charg\u00e9, sinon, un nouveau fichier avec le nom indiqu\u00e9 est cr\u00e9\u00e9. Si le fichier de ressource n\u2019est pas sp\u00e9cifi\u00e9, le nom est my_resource.pyxres.\" voir documentation</p> <p>Attention</p> <p>Programmation imp\u00e9rative: utilisation obligatoire de variables globales dans <code>update</code>.</p> <pre><code># on rajoute random\nimport pyxel, random\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n# vies\nvies = 4\n# initialisation des tirs\ntirs_liste = []\n# initialisation des ennemis\nennemis_liste = []\n# initialisation des explosions\nexplosions_liste = []\n# chargement des images\npyxel.load(\"images.pyxres\")\ndef vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\ndef tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\ndef vaisseau_suppression(vies):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in ennemis_liste:\nif ennemi[0] &lt;= vaisseau_x+8 and ennemi[1] &lt;= vaisseau_y+8 and ennemi[0]+8 &gt;= vaisseau_x and ennemi[1]+8 &gt;= vaisseau_y:\nennemis_liste.remove(ennemi)\nvies -= 1\n# on ajoute l'explosion\nexplosions_creation(vaisseau_x, vaisseau_y)\nreturn vies\ndef ennemis_suppression():\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in ennemis_liste:\nfor tir in tirs_liste:\nif ennemi[0] &lt;= tir[0]+1 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nennemis_liste.remove(ennemi)\ntirs_liste.remove(tir)\n# on ajoute l'explosion\nexplosions_creation(ennemi[0], ennemi[1])\ndef explosions_creation(x, y):\n\"\"\"explosions aux points de collision entre deux objets\"\"\"\nexplosions_liste.append([x, y, 0])\ndef explosions_animation():\n\"\"\"animation des explosions\"\"\"\nfor explosion in explosions_liste:\nexplosion[2] +=1\nif explosion[2] == 12:\nexplosions_liste.remove(explosion)                \n# =========================================================\n# == UPDATE\n# =========================================================\ndef update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste, vies, explosions_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste)\n# suppression des ennemis et tirs si contact\nennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nvies = vaisseau_suppression(vies)\n# evolution de l'animation des explosions\nexplosions_animation()    \n# =========================================================\n# == DRAW\n# =========================================================\ndef draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif vies &gt; 0:\n# affichage des vies            \npyxel.text(5,5, 'VIES:'+ str(vies), 7)\n# vaisseau (carre 8x8)\npyxel.blt(vaisseau_x, vaisseau_y, 0, 0, 0, 8, 8)\n# tirs\nfor tir in tirs_liste:\npyxel.blt(tir[0], tir[1], 0, 8, 0, 8, 8)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.blt(ennemi[0], ennemi[1], 0, 0, 8, 8, 8)\n# explosions (cercles de plus en plus grands)\nfor explosion in explosions_liste:\npyxel.circb(explosion[0]+4, explosion[1]+4, 2*(explosion[2]//4), 8+explosion[2]%3)            \n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\npyxel.run(update, draw)\n</code></pre> <p>Auteur : Laurent Abbal - GitHub | Twitter</p>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#complements","title":"COMPL\u00c9MENTS","text":""},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-01","title":"\u00c9tape #01","text":"<p>Trois Parties: </p> <ul> <li>d\u00e9claration des variables et des fonctions</li> <li>fonction update()</li> <li>fonction draw()</li> </ul> <p>Exemple d'utilisation pour le d\u00e9placement du vaisseau.</p>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#declaration-des-variables-et-des-fonctions","title":"D\u00e9claration des variables et des fonctions","text":"<p>Position du vaisseau par la cr\u00e9ation des coordonn\u00e9es du vaisseau au d\u00e9part. Pour l'instant il n'y a pas de vaisseau, juste deux variables <code>vaisseau_x</code> et <code>vaisseau_y</code> initialis\u00e9es par les valeurs 60.</p> <pre><code>vaisseau_x = 60\nvaisseau_y = 60\n</code></pre> <p>Cette fonction a pour arguments les valeurs des variables <code>x</code> et <code>y</code> et renvoie les valeurs des variables <code>x</code> et <code>y</code> modifi\u00e9es suivant certaines touches du clavier.</p> <pre><code>def vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#fonction-update","title":"Fonction update()","text":"<p>Cette fonction <code>update()</code> est appel\u00e9 30 fois par seconde. </p> <pre><code>def update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <p>Que fait cette instruction (affectation) ?</p> <pre><code> vaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <ul> <li>L'appel de la fonction <code>vaisseau_deplacement(vaisseau_x, vaisseau_y)</code> avec pour arguments les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code> et renvoie les valeurs modifi\u00e9es suivant certaines touches du clavier. </li> <li>Ces valeurs renvoy\u00e9es sont affect\u00e9es aux variables <code>vaisseau_x</code> et <code>vaisseau_y</code>.</li> <li>Les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code> sont modifi\u00e9es 30 fois par seconde suivant certaines touches du clavier.</li> </ul>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#fonction-draw","title":"Fonction draw()","text":"<p>Enfin le dessin !</p> <p>Pour l'instant il n'y a pas encore de vaisseau. On a cr\u00e9\u00e9 deux variables <code>vaisseau_x</code> et <code>vaisseau_y</code> qui sont modifi\u00e9es par l'appel de la fonction <code>update()</code> 30 fois par seconde permettant de r\u00e9aliser cette instruction.</p> <pre><code>vaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <p>Cette fonction draw() est appel\u00e9 30 fois par seconde.</p> <pre><code>def draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n</code></pre> <p>L'instruction <code>pyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)</code> permet de dessiner un rectangle ayant comme coordonn\u00e9es coin gauche les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code>, de largeur 8, de hauteur 8 et de couleur 1.</p> <p>A quoi sert l'instruction <code>python pyxel.cls(0)</code> ? </p> <ul> <li>La commenter et essayer ?</li> <li>La modifier en <code>python pyxel.cls(3)</code> et essayer ?</li> <li>La modifier en <code>python pyxel.cls(1)</code> et essayer ?</li> </ul> <p>30 fois par seconde deux actions sont r\u00e9alis\u00e9es :</p> <ul> <li>la fen\u00eatre graphique est remplie d'une couleur</li> <li>on dessine une rectangle</li> </ul> <p>Cela donne l'illusion d'un mouvement comme au cin\u00e9ma.</p>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-02","title":"\u00c9tape #02","text":"<p>Halo autour du tir</p> <pre><code>pyxel.rectb(tir[0]-1, tir[1]-1,3,6,3)\n</code></pre> <p>Tir sous forme cercle avec halo</p> <pre><code>pyxel.circ(tir[0], tir[1], 2, 3)\npyxel.circb(tir[0], tir[1],3,9)\n</code></pre> <p>Tir sous forme cercle avec halo clignotant</p> <pre><code>import random\npyxel.circb(tir[0], tir[1],3,random.randint(1,10))\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#etape-03","title":"\u00c9tape #03","text":"<ul> <li>Mettre en parall\u00e8le la cr\u00e9ation des tirs et des ennemis.</li> <li>Utilisation de listes pour enregistrer les coordonn\u00e9es sous la forme de liste.</li> <li>Ajout de valeurs (coordonn\u00e9es) par rapport au vaisseau par appui sur une touche.</li> <li>Ajout de valeurs (coordonn\u00e9es) al\u00e9atoire pour l'abscisse suivant une dur\u00e9e.</li> </ul> <pre><code>def tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\n</code></pre> <p>Mise \u00e0 jour des valeurs des diff\u00e9rentes listes suivant des conditions.</p> <pre><code>def tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#fonction-update_1","title":"Fonction update()","text":"<p>La fonction <code>update()</code> est appel\u00e9 30 fois par seconde permettant la mise \u00e0 jour des diff\u00e9rentes variables.</p> <pre><code>def update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste) \n</code></pre>"},{"location":"PYTHON/TUTORIELS/1-premiers-pas-avec-pyxel-premiere/#fonction-draw_1","title":"Fonction draw()","text":"<p>Enfin le dessin ! La fonction <code>draw()</code> est appel\u00e9 30 fois par seconde.</p> <pre><code>def draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8) \n</code></pre> <p>Auteur : Charles Poulmaire - Twitter</p>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/","title":"Premiers pas avec Pyxel - Terminale","text":"<p>Cahier Num\u00e9rique pour s'entra\u00eener</p> <p>Ce tutoriel est disponible au format Cahier Num\u00e9rique www.cahiernum.net/KV8H5B </p>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-01-deplacer-un-carre-avec-les-touches-de-directions","title":"\u00c9tape #01 - D\u00e9placer un carr\u00e9 avec les touches de directions","text":"<p>But : d\u00e9placer un carr\u00e9 avec les touches de directions</p> <p></p> <p>Programmation orient\u00e9e objet</p> <pre><code>import pyxel\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\npyxel.run(self.update, self.draw)\ndef vaisseau_deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.vaisseau_deplacement()\n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\nJeu()\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-02-ajouter-des-tirs","title":"\u00c9tape #02 - Ajouter des tirs","text":"<p>But : ajouter des tirs</p> <p></p> <p>Programmation orient\u00e9e objet</p> <pre><code>import pyxel\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\n# initialisation des tirs\nself.tirs_liste = []\npyxel.run(self.update, self.draw)\ndef vaisseau_deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\ndef tirs_creation(self):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\nif pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x+4, self.vaisseau_y-4])\ndef tirs_deplacement(self):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.vaisseau_deplacement()\n# creation des tirs en fonction de la position du vaisseau\nself.tirs_creation()\n# mise a jour des positions des tirs\nself.tirs_deplacement()\n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in self.tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)        \nJeu()\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-03-ajouter-des-ennemis","title":"\u00c9tape #03 - Ajouter des ennemis","text":"<p>But : ajouter des ennemis</p> <p></p> <p>Programmation orient\u00e9e objet</p> <pre><code># on rajoute random\nimport pyxel, random\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\n# initialisation des tirs\nself.tirs_liste = []\n# initialisation des ennemis\nself.ennemis_liste = []\npyxel.run(self.update, self.draw)\ndef deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\ndef tirs_creation(self):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\nif pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x+4, self.vaisseau_y-4])\ndef tirs_deplacement(self):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression quand ils sortent du cadre\"\"\"\nfor tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\ndef ennemis_creation(self):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nself.ennemis_liste.append([random.randint(0, 120), 0])\ndef ennemis_deplacement(self):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"              \nfor ennemi in self.ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nself.ennemis_liste.remove(ennemi)\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.deplacement()\n# creation des tirs en fonction de la position du vaisseau\nself.tirs_creation()\n# mise a jour des positions des tirs\nself.tirs_deplacement()\n# creation des ennemis\nself.ennemis_creation()\n# mise a jour des positions des ennemis\nself.ennemis_deplacement()            \n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in self.tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in self.ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)            \nJeu()\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-04-ajouter-les-collisions","title":"\u00c9tape #04 - Ajouter les collisions","text":"<p>But : ajouter les collisions</p> <p></p> <p>Programmation orient\u00e9e objet</p> <pre><code># on rajoute random\nimport pyxel, random\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\n# vies\nself.vies = 1\n# initialisation des tirs\nself.tirs_liste = []\n# initialisation des ennemis\nself.ennemis_liste = []\npyxel.run(self.update, self.draw)\ndef deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\ndef tirs_creation(self):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\nif pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x+4, self.vaisseau_y-4])\ndef tirs_deplacement(self):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression quand ils sortent du cadre\"\"\"\nfor tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\ndef ennemis_creation(self):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nself.ennemis_liste.append([random.randint(0, 120), 0])\ndef ennemis_deplacement(self):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"              \nfor ennemi in self.ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nself.ennemis_liste.remove(ennemi)\ndef vaisseau_suppression(self):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nif ennemi[0] &lt;= self.vaisseau_x+8 and ennemi[1] &lt;= self.vaisseau_y+8 and ennemi[0]+8 &gt;= self.vaisseau_x and ennemi[1]+8 &gt;= self.vaisseau_y:\nself.ennemis_liste.remove(ennemi)\nself.vies = 0                    \ndef ennemis_suppression(self):\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nfor tir in self.tirs_liste:\nif ennemi[0] &lt;= tir[0]+1 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nself.ennemis_liste.remove(ennemi)\nself.tirs_liste.remove(tir)\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.deplacement()\n# creation des tirs en fonction de la position du vaisseau\nself.tirs_creation()\n# mise a jour des positions des tirs\nself.tirs_deplacement()\n# creation des ennemis\nself.ennemis_creation()\n# mise a jour des positions des ennemis\nself.ennemis_deplacement()\n# suppression des ennemis et tirs si contact\nself.ennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nself.vaisseau_suppression()\n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif self.vies &gt; 0:\n# vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in self.tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in self.ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)\n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\nJeu()\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-05-ajouter-les-explosions-lors-des-collisions","title":"\u00c9tape #05 - Ajouter les explosions lors des collisions","text":"<p>But : ajouter les explosions lors des collisions</p> <p></p> <p>Programmation orient\u00e9e objet</p> <pre><code># on rajoute random\nimport pyxel, random\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\n# vies\nself.vies = 4\n# initialisation des tirs\nself.tirs_liste = []\n# initialisation des ennemis\nself.ennemis_liste = []\n# initialisation des explosions\nself.explosions_liste = []        \npyxel.run(self.update, self.draw)\ndef deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\ndef tirs_creation(self):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\nif pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x+4, self.vaisseau_y-4])\ndef tirs_deplacement(self):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression quand ils sortent du cadre\"\"\"\nfor tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\ndef ennemis_creation(self):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nself.ennemis_liste.append([random.randint(0, 120), 0])\ndef ennemis_deplacement(self):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"              \nfor ennemi in self.ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nself.ennemis_liste.remove(ennemi)\ndef vaisseau_suppression(self):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nif ennemi[0] &lt;= self.vaisseau_x+8 and ennemi[1] &lt;= self.vaisseau_y+8 and ennemi[0]+8 &gt;= self.vaisseau_x and ennemi[1]+8 &gt;= self.vaisseau_y:\nself.ennemis_liste.remove(ennemi)\nself.vies -= 1\n# on ajoute l'explosion\nself.explosions_creation(self.vaisseau_x, self.vaisseau_y)\ndef ennemis_suppression(self):\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nfor tir in self.tirs_liste:\nif ennemi[0] &lt;= tir[0]+1 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nself.ennemis_liste.remove(ennemi)\nself.tirs_liste.remove(tir)\n# on ajoute l'explosion\nself.explosions_creation(ennemi[0], ennemi[1])\ndef explosions_creation(self, x, y):\n\"\"\"explosions aux points de collision entre deux objets\"\"\"\nself.explosions_liste.append([x, y, 0])\ndef explosions_animation(self):\n\"\"\"animation des explosions\"\"\"\nfor explosion in self.explosions_liste:\nexplosion[2] +=1\nif explosion[2] == 12:\nself.explosions_liste.remove(explosion)\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.deplacement()\n# creation des tirs en fonction de la position du vaisseau\nself.tirs_creation()\n# mise a jour des positions des tirs\nself.tirs_deplacement()\n# creation des ennemis\nself.ennemis_creation()\n# mise a jour des positions des ennemis\nself.ennemis_deplacement()\n# suppression des ennemis et tirs si contact\nself.ennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nself.vaisseau_suppression()\n# evolution de l'animation des explosions\nself.explosions_animation()\n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif self.vies &gt; 0:\n# affichage des vies            \npyxel.text(5,5, 'VIES:'+ str(self.vies), 7)\n# vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in self.tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in self.ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8)\n# explosions (cercles de plus en plus grands)\nfor explosion in self.explosions_liste:\npyxel.circb(explosion[0]+4, explosion[1]+4, 2*(explosion[2]//4), 8+explosion[2]%3)\n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\nJeu()\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-06-ajouter-les-images","title":"\u00c9tape #06 - Ajouter les images","text":"<p>But : ajouter les images</p> <p> </p> <p>Pour ouvrir l'\u00e9diteur d'image : ouvrir la console (avec Edupyter depuis Thonny : \"Outils\" &gt; \"Ouvrir la console du syst\u00e8me...\", ou depuis le menu d'Edupyter : \"Console\") et saisir :</p> <pre><code>pyxel edit [PYXEL_RESOURCE_FILE]\n</code></pre> <p>\"Si le fichier de ressource Pyxel (.pyxres) existe d\u00e9j\u00e0, le fichier est charg\u00e9, sinon, un nouveau fichier avec le nom indiqu\u00e9 est cr\u00e9\u00e9. Si le fichier de ressource n\u2019est pas sp\u00e9cifi\u00e9, le nom est my_resource.pyxres.\" voir documentation</p> <p>Programmation orient\u00e9e objet</p> <pre><code># on rajoute random\nimport pyxel, random\nclass Jeu:\ndef __init__(self):\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nself.vaisseau_x = 60\nself.vaisseau_y = 60\n# vies\nself.vies = 4\n# initialisation des tirs\nself.tirs_liste = []\n# initialisation des ennemis\nself.ennemis_liste = []\n# initialisation des explosions\nself.explosions_liste = []\n# chargement des images\npyxel.load(\"images.pyxres\")\npyxel.run(self.update, self.draw)\ndef deplacement(self):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\nif pyxel.btn(pyxel.KEY_DOWN) and self.vaisseau_y&lt;120:\nself.vaisseau_y += 1\nif pyxel.btn(pyxel.KEY_UP) and self.vaisseau_y&gt;0:\nself.vaisseau_y += -1\ndef tirs_creation(self):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\nif pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x, self.vaisseau_y-8])\ndef tirs_deplacement(self):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression quand ils sortent du cadre\"\"\"\nfor tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\ndef ennemis_creation(self):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nself.ennemis_liste.append([random.randint(0, 120), 0])\ndef ennemis_deplacement(self):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"              \nfor ennemi in self.ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nself.ennemis_liste.remove(ennemi)\ndef vaisseau_suppression(self):\n\"\"\"disparition du vaisseau et d'un ennemi si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nif ennemi[0] &lt;= self.vaisseau_x+8 and ennemi[1] &lt;= self.vaisseau_y+8 and ennemi[0]+8 &gt;= self.vaisseau_x and ennemi[1]+8 &gt;= self.vaisseau_y:\nself.ennemis_liste.remove(ennemi)\nself.vies -= 1\n# on ajoute l'explosion\nself.explosions_creation(self.vaisseau_x, self.vaisseau_y)\ndef ennemis_suppression(self):\n\"\"\"disparition d'un ennemi et d'un tir si contact\"\"\"\nfor ennemi in self.ennemis_liste:\nfor tir in self.tirs_liste:\nif ennemi[0] &lt;= tir[0]+8 and ennemi[0]+8 &gt;= tir[0] and ennemi[1]+8 &gt;= tir[1]:\nself.ennemis_liste.remove(ennemi)\nself.tirs_liste.remove(tir)\n# on ajoute l'explosion\nself.explosions_creation(ennemi[0], ennemi[1])\ndef explosions_creation(self, x, y):\n\"\"\"explosions aux points de collision entre deux objets\"\"\"\nself.explosions_liste.append([x, y, 0])\ndef explosions_animation(self):\n\"\"\"animation des explosions\"\"\"\nfor explosion in self.explosions_liste:\nexplosion[2] +=1\nif explosion[2] == 12:\nself.explosions_liste.remove(explosion)\n# =====================================================\n# == UPDATE\n# =====================================================\ndef update(self):\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n# deplacement du vaisseau\nself.deplacement()\n# creation des tirs en fonction de la position du vaisseau\nself.tirs_creation()\n# mise a jour des positions des tirs\nself.tirs_deplacement()\n# creation des ennemis\nself.ennemis_creation()\n# mise a jour des positions des ennemis\nself.ennemis_deplacement()\n# suppression des ennemis et tirs si contact\nself.ennemis_suppression()\n# suppression du vaisseau et ennemi si contact\nself.vaisseau_suppression()\n# evolution de l'animation des explosions\nself.explosions_animation()\n# =====================================================\n# == DRAW\n# =====================================================\ndef draw(self):\n\"\"\"cr\u00e9ation et positionnement des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# si le vaisseau possede des vies le jeu continue\nif self.vies &gt; 0:\n# affichage des vies            \npyxel.text(5,5, 'VIES:'+ str(self.vies), 7)\n# vaisseau (carre 8x8)\npyxel.blt(self.vaisseau_x, self.vaisseau_y, 0, 0, 0, 8, 8)\n# tirs\nfor tir in self.tirs_liste:\npyxel.blt(tir[0], tir[1], 0, 8, 0, 8, 8)\n# ennemis\nfor ennemi in self.ennemis_liste:\npyxel.blt(ennemi[0], ennemi[1], 0, 0, 8, 8, 8)\n# explosions (cercles de plus en plus grands)\nfor explosion in self.explosions_liste:\npyxel.circb(explosion[0]+4, explosion[1]+4, 2*(explosion[2]//4), 8+explosion[2]%3)\n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\nJeu()\n</code></pre> <p>Auteur : Laurent Abbal - GitHub | Twitter</p>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#complements","title":"COMPL\u00c9MENTS","text":""},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-01","title":"\u00c9tape #01","text":"<p>Trois Parties: </p> <ul> <li>d\u00e9claration des variables et des fonctions</li> <li>fonction update()</li> <li>fonction draw()</li> </ul> <p>Exemple d'utilisation pour le d\u00e9placement du vaisseau.</p>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#declaration-des-variables-et-des-fonctions","title":"D\u00e9claration des variables et des fonctions","text":"<p>Position du vaisseau par la cr\u00e9ation des coordonn\u00e9es du vaisseau au d\u00e9part. Pour l'instant il n'y a pas de vaisseau, juste deux variables <code>vaisseau_x</code> et <code>vaisseau_y</code> initialis\u00e9es par les valeurs 60.</p> <pre><code>vaisseau_x = 60\nvaisseau_y = 60\n</code></pre> <p>Cette fonction a pour arguments les valeurs des variables <code>x</code> et <code>y</code> et renvoie les valeurs des variables <code>x</code> et <code>y</code> modifi\u00e9es suivant certaines touches du clavier.</p> <pre><code>def vaisseau_deplacement(x, y):\n\"\"\"d\u00e9placement avec les touches de directions\"\"\"\nif pyxel.btn(pyxel.KEY_RIGHT):\nif (x &lt; 120) :\nx = x + 1\nif pyxel.btn(pyxel.KEY_LEFT):\nif (x &gt; 0) :\nx = x - 1\nif pyxel.btn(pyxel.KEY_DOWN):\nif (y &lt; 120) :\ny = y + 1\nif pyxel.btn(pyxel.KEY_UP):\nif (y &gt; 0) :\ny = y - 1\nreturn x, y\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#fonction-update","title":"Fonction update()","text":"<p>Cette fonction <code>update()</code> est appel\u00e9 30 fois par seconde. </p> <pre><code>def update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <p>Que fait cette instruction (affectation) ?</p> <pre><code> vaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <ul> <li>L'appel de la fonction <code>vaisseau_deplacement(vaisseau_x, vaisseau_y)</code> avec pour arguments les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code> et renvoie les valeurs modifi\u00e9es suivant certaines touches du clavier. </li> <li>Ces valeurs renvoy\u00e9es sont affect\u00e9es aux variables <code>vaisseau_x</code> et <code>vaisseau_y</code>.</li> <li>Les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code> sont modifi\u00e9es 30 fois par seconde suivant certaines touches du clavier.</li> </ul>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#fonction-draw","title":"Fonction draw()","text":"<p>Enfin le dessin !</p> <p>Pour l'instant il n'y a pas encore de vaisseau. On a cr\u00e9\u00e9 deux variables <code>vaisseau_x</code> et <code>vaisseau_y</code> qui sont modifi\u00e9es par l'appel de la fonction <code>update()</code> 30 fois par seconde permettant de r\u00e9aliser cette instruction.</p> <pre><code>vaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n</code></pre> <p>Cette fonction draw() est appel\u00e9 30 fois par seconde.</p> <pre><code>def draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n</code></pre> <p>L'instruction <code>pyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)</code> permet de dessiner un rectangle ayant comme coordonn\u00e9es coin gauche les valeurs des variables <code>vaisseau_x</code> et <code>vaisseau_y</code>, de largeur 8, de hauteur 8 et de couleur 1.</p> <p>A quoi sert l'instruction <code>python pyxel.cls(0)</code> ? </p> <ul> <li>La commenter et essayer ?</li> <li>La modifier en <code>python pyxel.cls(3)</code> et essayer ?</li> <li>La modifier en <code>python pyxel.cls(1)</code> et essayer ?</li> </ul> <p>30 fois par seconde deux actions sont r\u00e9alis\u00e9es :</p> <ul> <li>la fen\u00eatre graphique est remplie d'une couleur</li> <li>on dessine une rectangle</li> </ul> <p>Cela donne l'illusion d'un mouvement comme au cin\u00e9ma.</p>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-02","title":"\u00c9tape #02","text":"<p>Halo autour du tir</p> <pre><code>pyxel.rectb(tir[0]-1, tir[1]-1,3,6,3)\n</code></pre> <p>Tir sous forme cercle avec halo</p> <pre><code>pyxel.circ(tir[0], tir[1], 2, 3)\npyxel.circb(tir[0], tir[1],3,9)\n</code></pre> <p>Tir sous forme cercle avec halo clignotant</p> <pre><code>import random\npyxel.circb(tir[0], tir[1],3,random.randint(1,10))\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#etape-03","title":"\u00c9tape #03","text":"<ul> <li>Mettre en parall\u00e8le la cr\u00e9ation des tirs et des ennemis.</li> <li>Utilisation de listes pour enregistrer les coordonn\u00e9es sous la forme de liste.</li> <li>Ajout de valeurs (coordonn\u00e9es) par rapport au vaisseau par appui sur une touche.</li> <li>Ajout de valeurs (coordonn\u00e9es) al\u00e9atoire pour l'abscisse suivant une dur\u00e9e.</li> </ul> <pre><code>def tirs_creation(x, y, tirs_liste):\n\"\"\"cr\u00e9ation d'un tir avec la barre d'espace\"\"\"\n# btnr pour eviter les tirs multiples\nif pyxel.btnr(pyxel.KEY_SPACE):\ntirs_liste.append([x+4, y-4])\nreturn tirs_liste\ndef ennemis_creation(ennemis_liste):\n\"\"\"cr\u00e9ation al\u00e9atoire des ennemis\"\"\"\n# un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nennemis_liste.append([random.randint(0, 120), 0])\nreturn ennemis_liste\n</code></pre> <p>Mise \u00e0 jour des valeurs des diff\u00e9rentes listes suivant des conditions.</p> <pre><code>def tirs_deplacement(tirs_liste):\n\"\"\"d\u00e9placement des tirs vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor tir in tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\ntirs_liste.remove(tir)\nreturn tirs_liste\ndef ennemis_deplacement(ennemis_liste):\n\"\"\"d\u00e9placement des ennemis vers le haut et suppression s'ils sortent du cadre\"\"\"\nfor ennemi in ennemis_liste:\nennemi[1] += 1\nif  ennemi[1]&gt;128:\nennemis_liste.remove(ennemi)\nreturn ennemis_liste\n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#fonction-update_1","title":"Fonction update()","text":"<p>La fonction <code>update()</code> est appel\u00e9 30 fois par seconde permettant la mise \u00e0 jour des diff\u00e9rentes variables.</p> <pre><code>def update():\n\"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\nglobal vaisseau_x, vaisseau_y, tirs_liste, ennemis_liste\n# mise \u00e0 jour de la position du vaisseau\nvaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n# creation des tirs en fonction de la position du vaisseau\ntirs_liste = tirs_creation(vaisseau_x, vaisseau_y, tirs_liste)\n# mise a jour des positions des tirs\ntirs_liste = tirs_deplacement(tirs_liste)\n# creation des ennemis\nennemis_liste = ennemis_creation(ennemis_liste)\n# mise a jour des positions des ennemis\nennemis_liste = ennemis_deplacement(ennemis_liste) \n</code></pre>"},{"location":"PYTHON/TUTORIELS/2-premiers-pas-avec-pyxel-terminale/#fonction-draw_1","title":"Fonction draw()","text":"<p>Enfin le dessin ! La fonction <code>draw()</code> est appel\u00e9 30 fois par seconde.</p> <pre><code>def draw():\n\"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n# vide la fenetre\npyxel.cls(0)\n# vaisseau (carre 8x8)\npyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 1)\n# tirs\nfor tir in tirs_liste:\npyxel.rect(tir[0], tir[1], 1, 4, 10)\n# ennemis\nfor ennemi in ennemis_liste:\npyxel.rect(ennemi[0], ennemi[1], 8, 8, 8) \n</code></pre> <p>Auteur : Charles Poulmaire - Twitter</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/","title":"Tutoriel d\u00e9taill\u00e9 - Terminale","text":"<p>Cahier Num\u00e9rique pour s'entra\u00eener</p> <p>Ce tutoriel est disponible au format Cahier Num\u00e9rique www.cahiernum.net/CGS8UD </p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#1-deplacer-un-carre-avec-les-touches-de-directions","title":"1. D\u00e9placer un carr\u00e9 avec les touches de directions","text":"<p>Apr\u00e8s avoir import\u00e9 le module Pyxel dans votre script Python, on cr\u00e9e une classe Jeu, pour regrouper l\u2019ensemble des attributs et m\u00e9thodes n\u00e9cessaires. Utiliser une classe a l\u2019avantage de remplacer des variables globales par des attributs.</p> <p>Cette classe doit contenir les m\u00e9thodes <code>draw()</code> et <code>update()</code>. La m\u00e9thode <code>draw()</code> cr\u00e9e et positionne les objets, alors que la m\u00e9thode <code>update()</code> met \u00e0 jour les variables. A l\u2019int\u00e9rieur du constructeur de la classe, on sp\u00e9cifie d\u2019abord la taille de la fen\u00eatre avec la fonction <code>init()</code> :</p> <pre><code># taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128, title=\"Nuit du c0de\")\n</code></pre> <p>On lance l\u2019application Pyxel avec la fonction run qui cr\u00e9e deux processus bas\u00e9s sur les m\u00e9thodes <code>draw()</code> et <code>update()</code> : <pre><code>pyxel.run(self.update, self.draw)\n</code></pre> Cette instruction doit \u00eatre la derni\u00e8re du constructeur. La cr\u00e9ation d\u2019une instance de la classe permet de lancer le jeu. Pour d\u00e9placer un objet, on v\u00e9rifie modifie ses coordonn\u00e9es dans la m\u00e9thode update(). Ici on les modifie \u00e0 l\u2019aide du clavier, en v\u00e9rifiant si une touche est press\u00e9e (dans cet exemple, la touche droite et le touche gauche) : <pre><code>if pyxel.btn(pyxel.KEY_RIGHT) and self.vaisseau_x&lt;120:\nself.vaisseau_x += 1\nif pyxel.btn(pyxel.KEY_LEFT) and self.vaisseau_x&gt;0:\nself.vaisseau_x += -1\n</code></pre> Il ne reste plus qu\u2019\u00e0 afficher le carr\u00e9 avec ses nouvelles coordonn\u00e9es gr\u00e2ce \u00e0 cette instruction dans la m\u00e9thode <code>draw()</code> : <pre><code> # vaisseau (carre 8x8)\npyxel.rect(self.vaisseau_x, self.vaisseau_y, 8, 8, 1)\n</code></pre></p> <p>Lancer le script tutoriel1.py. Modifier le script pour le d\u00e9placer selon l\u2019axe des y.</p> <p>Les attributs mouse_x et mouse_y du module pyxel permettent de connaitre la position actuelle de la souris. Modifier le script pour contr\u00f4ler le carr\u00e9 avec la souris</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#2-ajouter-des-tirs","title":"2. Ajouter des tirs","text":"<p>Un tir est caract\u00e9ris\u00e9 par ses coordonn\u00e9es. Cr\u00e9er un tir signifie ajouter un couple de coordonn\u00e9es dans la liste des tirs. <pre><code>if pyxel.btnr(pyxel.KEY_SPACE):\nself.tirs_liste.append([self.vaisseau_x+4, self.vaisseau_y-4])\n</code></pre></p> <p>Les coordonn\u00e9es du tir sont d\u00e9termin\u00e9es \u00e0 partir de celles du vaisseau, sachant que ces coordonn\u00e9es correspondent au coin en haut \u00e0 gauche. </p> <p>On d\u00e9place ensuite d\u2019un pixel le tir jusqu\u2019\u00e0 ce qu\u2019il sorte de l\u2019\u00e9cran. Il suffit alors de le retirer de la liste des tirs pour le supprimer. <pre><code>for tir in  self.tirs_liste:\ntir[1] -= 1\nif  tir[1]&lt;-8:\nself.tirs_liste.remove(tir)\n</code></pre> Lancer le script tutoriel2.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#3-ajouter-des-ennemis","title":"3. Ajouter des ennemis","text":"<p>Les images sont affich\u00e9es \u00e0 l\u2019\u00e9cran \u00e0 raison de 30 images par secondes. L\u2019attribut frame_count du module pyxel comptabilise le nombre d\u2019images affich\u00e9es depuis le d\u00e9but du jeu. Ainsi, pour cr\u00e9er un ennemi toute les secondes, on v\u00e9rifie que le nombres d\u2019images est un multiple de 30. La cr\u00e9ation des ennemis repose sur le m\u00eame principe que celui des tirs, mais on utilise la fonction <code>randint()</code> du module random pour les cr\u00e9er de fa\u00e7on al\u00e9atoire selon l\u2019axe des x. <pre><code># un ennemi par seconde\nif (pyxel.frame_count % 30 == 0):\nself.ennemis_liste.append([random.randint(0, 120), 0])\n</code></pre> Lancer le script tutoriel3.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#4-ajouter-les-collisions","title":"4. Ajouter les collisions","text":"<p>Pour le cas de la collision d\u2019un tir avec un ennemi, la d\u00e9tection est simple : la coordonn\u00e9e en y doit \u00eatre inf\u00e9rieure \u00e0 ye \u2013 8, et la coordonn\u00e9e en x doit \u00eatre comprise entre xe et xe + 8.</p> <p></p> <p>Pour d\u00e9tecter une collision entre un ennemi et un vaisseau, il faut consid\u00e9rer deux cas de figure (en ne consid\u00e9rant pour l\u2019instant que l\u2019axe des x) :</p> <p></p> <p>A partir de ces figures, on en d\u00e9duit deux conditions : il faut le bord gauche du vaisseau soit inf\u00e9rieur \u00e0 xe + 8, et le bord droit sup\u00e9rieur \u00e0 xe.</p> <p>On applique le m\u00eame raisonnement sur l\u2019axe des y.</p> <p>Gr\u00e2ce aux collisions il est possible de mettre une condition d\u2019\u00e9chec avec un \u00e9cran de fin de jeu. La m\u00e9thode <code>text()</code> permet d\u2019afficher un texte aux coordonn\u00e9es sp\u00e9cifi\u00e9es (on peut \u00e9galement pr\u00e9ciser le nombre de vie pendant la partie). <pre><code># si le vaisseau possede des vies le jeu continue\nif self.vaisseau.vies &gt; 0:\n...\n# sinon: GAME OVER\nelse:\npyxel.text(50,64, 'GAME OVER', 7)\n</code></pre></p> <p>Lancer le script tutoriel4.py</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#5-ajouter-les-explosions-lors-des-collisions","title":"5. Ajouter les explosions lors des collisions","text":"<p>Pour les explosions, on proc\u00e8de comme pour les tirs.</p> <p>Cependant, en plus des coordonn\u00e9es, on ajoute un troisi\u00e8me param\u00e8tre. C\u2019est ce param\u00e8tre qui permettra de cr\u00e9er des cercles dont le rayon et la couleur \u00e9volue.</p> <p>Lancer le script tutoriel5.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#6-ajouter-des-images","title":"6. Ajouter des images","text":"<p>Une tuile (tile en anglais) est un \u00e9l\u00e9ment graphique d'un jeu vid\u00e9o, constitu\u00e9 de petites images (en g\u00e9n\u00e9ral) carr\u00e9es dispos\u00e9es sur une grille.</p> <p>Une tuile peut repr\u00e9senter un sprite ou un \u00e9l\u00e9ment de d\u00e9cor, avec lequel on peut interagir ou non. L'ensemble complet des tuiles disponibles pour une utilisation dans une zone de jeu est appel\u00e9 un jeu de tuiles (ou tileset en anglais).</p> <p>L\u2019\u00e9diteur Pyxel peut cr\u00e9er des images et des sons utilisables dans des applications Pyxel. (voir la documentation Pyxel)</p> <p>Lors de l'initialisation du jeu, il est n\u00e9cessaire de charger en m\u00e9moire le fichier ressource. <pre><code># chargement des images\npyxel.load(\"images.pyxres\")\n</code></pre></p> <p>On peut ensuite placer l\u2019image \u00e0 l\u2019\u00e9cran, \u00e0 la place du carr\u00e9 initial : <pre><code># vaisseau (carre 8x8)\npyxel.blt(self.x, self.y, 0, 0, 0, 8, 8)\n</code></pre> Si les dimensions de l\u2019image sont indiqu\u00e9es comme n\u00e9gatives, la copie de l\u2019image sera invers\u00e9e horizontalement et/ou verticalement.</p> <p>Il est \u00e9galement possible de sp\u00e9cifier une couleur transparente, qui ne sera donc pas dessiner \u00e0 l\u2019\u00e9cran. On a choisi ici la couleur noire (code : 0), initialis\u00e9 dans la constante <code>TRANSPARENT_COLOR</code>.</p> <p>Lancer le script tutoriel6.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#7-utiliser-la-poo","title":"7. Utiliser la POO","text":"<p>Il est \u00e9galement possible de cr\u00e9er des instances de classes pour d\u00e9crire les diff\u00e9rents \u00e9l\u00e9ments du jeu. En soi, le fonctionnement est identique ; par contre, cela permet de regrouper dans un m\u00eame objet les caract\u00e9ristiques et les comportements de l\u2019objet.</p> <p>Par exemple, un objet <code>Tir</code> va regrouper ses coordonn\u00e9es, ainsi que la mani\u00e8re de le dessiner, de la d\u00e9placer et la gestion des collisions avec les ennemis.</p> <p></p> <p>On peut remarquer qu\u2019un troisi\u00e8me attribut a \u00e9t\u00e9 rajout\u00e9 : il s\u2019agit de l\u2019attribut <code>alive</code>, initialis\u00e9 \u00e0 <code>True</code>, qui permet de d\u00e9terminer si l\u2019objet doit continuer \u00e0 \u00eatre afficher ou s\u2019il doit \u00eatre supprimer. <pre><code>def deplacement(self):\nself.y -= 1\nif  self.y &lt; -8:\nself.alive = False\n</code></pre> Les objets qui ne sont plus \u00ab vivants \u00bb sont alors supprim\u00e9s des listes \u00e0 dessiner. <pre><code>for tir in  self.tirs_liste:\ntir.deplacement()\nif  not tir.alive :\nself.tirs_liste.remove(tir)\n</code></pre> Lancer le script tutoriel7.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#8-animer-les-sprites","title":"8. Animer les sprites","text":"<p>Pour animer les sprites, on va utiliser plusieurs images du pav\u00e9 pour un seul sprite.</p> <p></p> <p>L\u2019enchainement des images donne l\u2019impression de mouvement. Dans le script tutoriel8.py, on utilise l\u2019attribut <code>pyxel.frame_count</code> pour modifier l\u2019image toutes les 1/10\u00e8me de seconde. On utilise la variable <code>coef</code> pour choisir l\u2019image.</p> <p><pre><code>#Change l'aspect tous les 1/10 de secondes\n#coef peut vaaloir 0,1 ou 2\ncoef = pyxel.frame_count //3% 3\npyxel.blt(self.x, self.y, 0, 0, 8 + 8*coef, 8, 8) \n</code></pre> Lancer le script tutoriel8.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#9-ajouter-du-son","title":"9. Ajouter du son","text":"<p>Il est possible de rajouter des sons et des musiques au jeu. Ces derniers peuvent \u00eatre cr\u00e9\u00e9s \u00e0 partir de l\u2019\u00e9diteur de ressources.</p> <p> </p> <p>On peut charger les fichiers ressources gr\u00e2ce \u00e0 la m\u00e9thode load(). Le fichier peut \u00eatre charg\u00e9 en entier, ou partiellement. Dans ce cas on sp\u00e9cifie quelles parties charg\u00e9es.</p> <p>La m\u00e9thode <code>playm()</code> permet de lancer une musique en continu. <pre><code># chargement des images et des sons\npyxel.load(\"images.pyxres\", True, True, False, False)\npyxel.load(\"sons.pyxres\", False, False, True, True)\n#Lancement de la musique\npyxel.playm(0, loop=True)\n</code></pre></p> <p>On peut \u00e9galement \u00e9mettre des bruitages (ici, le son num\u00e9ro 1) : <pre><code> #lancement d'un bruitage\npyxel.play(0, 1)\n</code></pre></p> <p>Lancer le script tutoriel9.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#10-ajouter-et-faire-defiler-un-decor","title":"10. Ajouter et faire d\u00e9filer un d\u00e9cor","text":"<p>Une tilemap (litt\u00e9ralement une \"carte de tuile\") est une grille utilis\u00e9e pour cr\u00e9er la disposition/le fond graphique d'un jeu. L'\u00e9cran est ainsi repr\u00e9sent\u00e9 par une grille compos\u00e9e de nombreuses cases, sur lesquelles sont appliqu\u00e9es une image par case. Il est alors possible de cr\u00e9er un fond au jeu, compos\u00e9 des \u00e9l\u00e9ments du jeu de tuiles</p> <p>On peut \u00e9galement superposer les d\u00e9cor afin de cr\u00e9er une impression de profondeur. En d\u00e9but de la m\u00e9thode <code>draw()</code>, on chargera d\u2019abord le fond, puis le d\u00e9cor de premier plan.</p> <p>Ce d\u00e9cor peut \u00eatre statique, mais il est \u00e9galement possible de r\u00e9aliser un d\u00e9filement. Ce d\u00e9filement peut \u00eatre automatique (par exemple \u00e0 raison de 1 px/s) ou li\u00e9 aux d\u00e9placements du personnage. <pre><code>pyxel.camera()\npyxel.bltm(0, 0, 0, 192, (self.scroll_y // 4) % 128, 128, 128)\npyxel.bltm(0, 0, 0, 0, self.scroll_y,  128, 128, TRANSPARENT_COLOR)\n</code></pre></p> <p>Lancer le script tutoriel10.py.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#11-interagir-avec-le-decor","title":"11. Interagir avec le d\u00e9cor","text":"<p>A l\u2019int\u00e9rieur du jeu de tuiles, chaque tuile est rep\u00e9r\u00e9e par des coordonn\u00e9es.</p> <p></p> <p>Ici, la fus\u00e9e se trouve aux coordonn\u00e9es (0, 0) et le monstre \u00e0 (0, 1).</p> <p>La carte peut \u00eatre consid\u00e9r\u00e9e comme une grille o\u00f9 chaque case contient une tuile (elle-m\u00eame identifi\u00e9e par ses coordonn\u00e9es dans le jeu de tuile). Ainsi chaque case de la carte mesure 8 pixels par 8.</p> <p>Il est donc possible de d\u00e9tecter des collisions entre le vaisseau et un ast\u00e9ro\u00efde du d\u00e9cor. Dans un premier temps on convertit les coordonn\u00e9es \u00e0 l\u2019\u00e9cran avec les coordonn\u00e9es de la carte, en prenant en comptant un \u00e9ventuel d\u00e9filement. <pre><code>#conversion entre les coordonn\u00e9es du \u00e0 l'\u00e9cran\n# et les coordonn\u00e9es de la carte\nx1 = self.x // 8\ny1 = (self.y + scroll) // 8\n</code></pre> Il faut ensuite prendre en compte que le vaisseau peut \u00eatre \u00e0 cheval sur plusieurs tuiles. <pre><code># Le vaisseau peut potentiellement \u00eatre \u00e0 cheval sur 4 tuiles\nx2 = (self.x + 8 - 1) // 8\ny2 = (self.y + scroll + 8 - 1) // 8\n</code></pre> On peut ensuite d\u00e9tecter sur quelle tuile on se trouve gr\u00e2ce \u00e0 la m\u00e9thode <code>pget()</code> de l\u2019objet <code>tilemap</code>. La constante <code>TUILE_ASTEROID</code> est initialis\u00e9e aux coordonn\u00e9es de la tuile recherch\u00e9e, \u00e0 savoir (2, 1). <pre><code>#on parcours 1 \u00e0 4 tuiles\nfor yi in range(y1, y2 + 1):\nfor xi in range(x1, x2 + 1):\ntuile = pyxel.tilemap(0).pget(xi, yi)\nif tuile == TUILE_ASTEROID:\nself.vies -= 1\n#on efface la tuile pour ne pas qu'elle soit prise en compte deux fois\npyxel.tilemap(0).pset(xi, yi, TUILE_ESPACE)\n</code></pre></p> <p>Une fois d\u00e9tect\u00e9e, on modifie la tuile pour ne pas qu\u2019elle soit prise en compte plusieurs fois gr\u00e2ce \u00e0 la m\u00e9thode <code>pset()</code> de l\u2019objet <code>tilemap</code>. A noter que cette modification n\u2019est pas d\u00e9finitive et n\u2019intervient que pour la carte charg\u00e9e en m\u00e9moire.</p> <p>Lancer le script tutoriel11.py.</p> <p>Cr\u00e9er la fonction detect_bonus() qui d\u00e9tecte le passage du vaisseau sur les bonus de gain de vie pr\u00e9sents dans le d\u00e9cor.</p>"},{"location":"PYTHON/TUTORIELS/3-tutoriel-detaille-terminale/#12-placer-des-ennemis-dans-le-decor","title":"12. Placer des ennemis dans le d\u00e9cor","text":"<p>Au lieu que les ennemis apparaissent de mani\u00e8re al\u00e9atoire, on peut vouloir qu\u2019ils apparaissent \u00e0 des endroits pr\u00e9cis du d\u00e9cor.</p> <p>Pour cela, il faut d\u00e9dier une tuile \u00e0 ce placement, puis on place des copies de cette tuile aux endroits de la carte o\u00f9 l\u2019on souhaite voir surgir les ennemis.</p> <p></p> <p>A l\u2019initialisation du jeu, il est n\u00e9cessaire de rendre ces tuiles transparentes afin qu\u2019elles ne soient pas affich\u00e9es, par contre elles pourront toujours \u00eatre identifi\u00e9es par la m\u00e9thode <code>pget()</code> de l\u2019objet <code>tilemap</code>. <pre><code># chargement des images\npyxel.load(\"images.pyxres\")\npyxel.image(0).rect(16, 16, 8, 8, TRANSPARENT_COLOR)\n</code></pre> Lors du d\u00e9filement, on parcourt la carte (tout du moins la partie nouvellement affich\u00e9e) et on cr\u00e9e un ennemi aux coordonn\u00e9es de chaque tuile que l\u2019on trouve. <pre><code>tuile = pyxel.tilemap(0).pget(x, y)\nif tuile == TUILE_MONSTRE:\npyxel.tilemap(0).pset(x, y, TUILE_ESPACE)\nself.ennemis_liste.append([x*8,y*8-y1])\n</code></pre> Lancer le script tutoriel12.py.</p> <p>Auteur : Peio47</p>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/","title":"Liste","text":""},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#snake-tres-simple-avec-pyxel-pas-a-pas","title":"Snake tr\u00e8s simple avec Pyxel, pas \u00e0 pas","text":"<ul> <li>sujet pdf</li> <li>sujet docx</li> <li>correction pdf</li> <li>correction docx</li> </ul>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#programmer-un-jeu-video-avec-pyxel-15","title":"Programmer un jeu vid\u00e9o avec Pyxel : 1/5","text":"<ul> <li>sujet pdf</li> <li>sujet docx</li> <li>correction pdf</li> <li>correction docx</li> </ul>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#programmer-un-jeu-video-avec-pyxel-25","title":"Programmer un jeu vid\u00e9o avec Pyxel : 2/5","text":"<ul> <li>sujet pdf</li> <li>sujet docx</li> </ul>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#programmer-un-jeu-video-avec-pyxel-35","title":"Programmer un jeu vid\u00e9o avec Pyxel : 3/5","text":"<ul> <li>sujet pdf</li> <li>sujet docx</li> </ul>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#programmer-un-jeu-video-avec-pyxel-45","title":"Programmer un jeu vid\u00e9o avec Pyxel : 4/5","text":"<ul> <li>sujet docx</li> </ul>"},{"location":"PYTHON/TUTORIELS/autres-tutoriels/#programmer-un-jeu-video-avec-pyxel-55","title":"Programmer un jeu vid\u00e9o avec Pyxel : 5/5","text":"<ul> <li>sujet pdf</li> <li>sujet docx</li> <li>correction pdf</li> <li>correction docx</li> </ul> <p>Auteur : Marine M\u00e9ra</p>"},{"location":"SCRATCH/01-introduction/","title":"INTRODUCTION","text":"<p>Pour pr\u00e9parer la Nuit du c0de avec les \u00e9l\u00e8ves, voici plusieurs ressources qui permettent de mettre en place des s\u00e9ances de d\u00e9couverte / approfondissement de Scratch encadr\u00e9es ou en autonomie.</p> <ul> <li>18 tutoriels au format \"cahier num\u00e9rique\"</li> <li>18 tutoriels vid\u00e9o</li> <li>4 exercices d'entra\u00eenement ou de s\u00e9lection</li> <li>Univers de jeu Scratch 2022</li> </ul>"},{"location":"SCRATCH/02-cahiers-numeriques-scratch/","title":"TUTORIELS - VID\u00c9OS + ENVIRONNEMENT SCRATCH","text":"<p>Entra\u00eenements en autonomie</p> <p>18 tutoriels au format \"cahier num\u00e9rique\" : vid\u00e9o + environnement Scratch</p> <p>Les \u00e9l\u00e8ves ont ainsi sur une m\u00eame page la vid\u00e9o sur la partie gauche et l'environnement Scratch sur la partie droite. Il leur est alors possible de mettre directement en application ce qu'ils voient sur la vid\u00e9o. Ceci permet un entra\u00eenement en autonomie. Il suffit de fournir les liens aux \u00e9l\u00e8ves.</p> <p>Si vous souhaitez cr\u00e9er vous m\u00eame des cahiers num\u00e9riques: Cahiers Num\u00e9riques</p> <p>Vid\u00e9os cr\u00e9\u00e9es par Jean-Yve Labouche</p> <ul> <li>1 - D\u00e9placer un lutin avec les touches du clavier (m\u00e9thode 1) : nuitducode.net/atelier-scratch?yt=a6WRTBb8CkM</li> <li>2 - D\u00e9placer un lutin avec les touches du clavier (m\u00e9thode 2) : nuitducode.net/atelier-scratch?yt=3PbXyzQQOYk</li> <li>3 - Bien commencer son programme: l'initialisation : nuitducode.net/atelier-scratch?yt=8oSKtPQNDr8</li> <li>4 - D\u00e9placer un lutin automatiquement vers un autre lutin : nuitducode.net/atelier-scratch?yt=xRiZD5wsh0k</li> <li>5 - Obtenir des d\u00e9placements plus fluides : nuitducode.net/atelier-scratch?yt=O1tDjDGwBtE</li> <li>6 - Ajouter des interactions entre les lutins : nuitducode.net/atelier-scratch?yt=nINGvQVP_Og</li> <li>7 - Ajouter des interactions entre un luton et l'arri\u00e8re plan : nuitducode.net/atelier-scratch?yt=P22s9A9U9lM</li> <li>8 - Faire communiquer des lutins : nuitducode.net/atelier-scratch?yt=jtVMnEZDDes</li> <li>9 - Utiliser le chronom\u00e8tre : nuitducode.net/atelier-scratch?yt=v37gPSxlPW4</li> <li>10 - Cr\u00e9er un tir (utilisation des clones) : nuitducode.net/atelier-scratch?yt=P7ORrWLlGsA</li> <li>11 - Faire sauter un lutin : nuitducode.net/atelier-scratch?yt=n1NCXKKrtq0</li> <li>12 - Faire sauter un lutin: version am\u00e9lior\u00e9e : nuitducode.net/atelier-scratch?yt=DZYkdUrQegU</li> <li>13 - D\u00e9placements plus r\u00e9alistes (pas d'arr\u00eats brusques) : nuitducode.net/atelier-scratch?yt=5wrleesBQCU</li> <li>14 - Cr\u00e9er une trajectoire parabolique (lancer de ballon, tir...) : nuitducode.net/atelier-scratch?yt=MK4F1E3_nEY</li> <li>15 - Faire d\u00e9filer l'arri\u00e8re plan (scrolling) : nuitducode.net/atelier-scratch?yt=fQZVY39WTg4</li> <li>16 - Faire d\u00e9filer l'arri\u00e8re plan pour donner un effet de profondeur : nuitducode.net/atelier-scratch?yt=8VfQzEOcRd0</li> <li>17 - R\u00e9aliser un scrolling fini sur plusieurs arri\u00e8re-plans : nuitducode.net/atelier-scratch?yt=-S4utl_quqQ</li> <li>18 - R\u00e9aliser un scrolling infini sur plusieurs arri\u00e8re-plans : nuitducode.net/atelier-scratch?yt=X669S6tAyis</li> </ul>"},{"location":"SCRATCH/03-videos/","title":"TUTORIELS - VID\u00c9OS","text":"<p>18 tutoriels au format vid\u00e9o</p> <p>Vid\u00e9os cr\u00e9\u00e9es par Jean-Yve Labouche</p>"},{"location":"SCRATCH/04-entrainements-selections/","title":"EXERCICES D'ENTRA\u00ceNEMENT OU DE S\u00c9LECTION","text":"<p>4 exercices complets</p> <p>Fiches d'entra\u00eenement cr\u00e9\u00e9es par Jean-Yve Labouche</p>"},{"location":"SCRATCH/04-entrainements-selections/#duel-dans-le-cosmos","title":"\ud83d\udd79\ufe0f Duel dans le cosmos","text":"<p> ouvrir </p> <p>Dans cet univers de jeu, il y a 7 lutins \u00e0 utiliser: </p> <ul> <li>2 astronautes (blanc et orange)</li> <li>2 lasers (vert et rouge)</li> <li>1 explosion</li> <li>1 lutin de texte</li> <li>et 2 de chiffres</li> </ul> <p>Les d\u00e9placements de l\u2019astronautes blanc sont d\u00e9j\u00e0 cod\u00e9s, vous n\u2019avez pas \u00e0 les modifier. Pour l\u2019astronaute orange, il y a aussi une base pour les d\u00e9placements qu\u2019il faudra compl\u00e9ter. Le jeu est simple : le joueur (astronaute blanc) doit tirer sur l\u2019astronaute orange sans se faire tirer dessus par celui-ci.</p> <p>Documents fournis:</p> <ul> <li>L'univers de jeu (fichier Scratch pour les \u00e9l\u00e8ves)</li> <li>La fiche de consigne</li> <li>Une grille d'\u00e9valuation</li> </ul>"},{"location":"SCRATCH/04-entrainements-selections/#la-cle-des-champs","title":"\ud83d\udd79\ufe0f La cl\u00e9 des champs","text":"<p> ouvrir </p> <p>Dans cet univers de jeu, il y a 14 lutins. Attention ! Vous n\u2019avez pas de code \u00e0 \u00e9crire pour l\u2019\u00e9chelle, le sol, ni les deux plates-formes. Le jeu est simple : l\u2019extraterrestre vert (joueur) doit aller chercher la clef sur la plate-forme pour ouvrir la porte. Il doit \u00e9viter les boules de feu envoy\u00e9es par la bernacle, l\u2019abeille et ne pas toucher aux pointes.</p> <p>Documents fournis:</p> <ul> <li>L'univers de jeu (fichier Scratch pour les \u00e9l\u00e8ves)</li> <li>La fiche de consigne</li> <li>Une grille d'\u00e9valuation</li> </ul>"},{"location":"SCRATCH/04-entrainements-selections/#le-tresor-de-piggy","title":"\ud83d\udd79\ufe0f Le tr\u00e9sor de Piggy","text":"<p> ouvrir </p> <p>Dans cet univers de jeu, il y a 7 lutins \u00e0 animer:</p> <ul> <li>Piggy, le cochon ail\u00e9 qui sera dirig\u00e9 par le joueur</li> <li>Des obstacles (scie, pi\u00e8ge, poing et masse)</li> <li>Une pi\u00e8ce</li> <li>Un coffre</li> </ul> <p>Il y a \u00e9galement un lutin \u00ab texte \u00bb et un autre qui contient les sons. Le jeu \u00e0 cr\u00e9er est simple : Piggy doit r\u00e9cup\u00e9rer la pi\u00e8ce et l\u2019apporter dans le coffre tout en \u00e9vitant les obstacles, tous mortels. Les lutins ont beaucoup de costumes qu\u2019il faudra bien utiliser.</p> <p>Documents fournis :</p> <ul> <li>L'univers de jeu (fichier Scratch pour les \u00e9l\u00e8ves)</li> <li>La fiche de consigne</li> <li>Une grille d'\u00e9valuation</li> </ul>"},{"location":"SCRATCH/04-entrainements-selections/#flappy-piggy","title":"\ud83d\udd79\ufe0f Flappy Piggy","text":"<p> ouvrir </p> <p>Dans cet univers de jeu, il y a 8 lutins \u00e0 utiliser : Piggy, le cochon ail\u00e9 qui sera dirig\u00e9 par le joueur ; des tuyaux (un seul lutin) ; deux lutins \u00ab sol \u00bb ; un lutin \u00ab Play \u00bb ; deux lutins \u00ab chiffres \u00bb pour afficher le score ; un lutin texte \u00ab Game over \u00bb. Chaque lutin contient les 4 sons \u00e0 disposition pour ce jeu. Le jeu \u00e0 cr\u00e9er est simple \u00e0 jouer, mais assez technique \u00e0 coder : Piggy doit passer entre les tuyaux sans les percuter.</p> <p>Documents fournis:</p> <ul> <li>L'univers de jeu (fichier Scratch pour les \u00e9l\u00e8ves)</li> <li>La fiche de consigne</li> <li>Une grille d'\u00e9valuation</li> </ul>"},{"location":"SCRATCH/05-univers-scratch-2022/","title":"UNIVERS DE JEU SCRATCH 2022","text":"<p>Lien vers les univers de jeu 2022 : scratch.mit.edu/users/akihabara-eki/projects/</p>"}]}